openapi: 3.0.0
info:
  title: 'Chiorino ERP API'
  version: '1'
paths:
  /addresses:
    get:
      tags:
        - 'BP Addresses'
      summary: 'Get available bp addresses list'
      operationId: 2546b24a9a7aa656b01d1a689724d40a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AddressResource' } }
                type: object
    post:
      tags:
        - 'BP Addresses'
      summary: 'Show BP Address'
      operationId: cf24da091be790deb0c2b040145a2d8a
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResource'
        '403':
          description: Unauthorized
  '/addresses/{id}':
    get:
      tags:
        - 'BP Addresses'
      summary: 'Edit new BP Address'
      operationId: effb140ca04532d3e9abc39565cba14d
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - address
                - street_number
                - timezone
                - nation_id
                - city_id
                - zip_id
              properties:
                name:
                  type: string
                address:
                  type: string
                street_number:
                  type: string
                timezone:
                  type: string
                nation_id:
                  type: string
                province_id:
                  type: string
                city_id:
                  type: string
                zip_id:
                  type: string
              type: object
            example:
              name: Biella
              address: 'Via cavour'
              street_number: '106'
              timezone: Europe/Rome
              nation_id: IT
              city_id: 845-1
              province_id: 845-2
              zip_id: 845-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    put:
      tags:
        - 'BP Addresses'
      summary: 'Update BP Address'
      operationId: cde500c0467604d32ff9cb7f92390ba6
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                address:
                  type: string
                street_number:
                  type: string
                timezone:
                  type: string
                nation_id:
                  type: string
                province_id:
                  type: string
                city_id:
                  type: string
                zip_id:
                  type: string
              type: object
            example:
              name: Biella
              address: 'Via cavour'
              street_number: '106'
              timezone: Europe/Rome
              nation_id: IT
              city_id: 845-1
              province_id: 845-2
              zip_id: 845-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'BP Addresses'
      summary: 'Delete BP Address'
      operationId: f0b6cb1a72d4a758992d2c4c843d57ea
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /adjustments-type:
    get:
      tags:
        - 'Adjustment Type'
      summary: 'Get list of adjustments type'
      operationId: a2082397c97b330486ed947c7ff84bbe
      responses:
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  /bp:
    get:
      tags:
        - BP
        - masterdata_business_partner.php
      summary: 'BP list'
      operationId: 36d29af97ada3151e0c5b1a90ade33ba
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPResource' } }
                type: object
    post:
      tags:
        - BP
        - masterdata_business_partner.php
      summary: 'Create new BP'
      operationId: ad1ab3fc8d68d1820fe0aefcd102a439
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
                - supplier
                - customer
                - currency
                - vat
              properties:
                desc:
                  type: string
                supplier:
                  type: boolean
                customer:
                  type: boolean
                address_id:
                  type: string
                contact_id:
                  type: string
                business_registry_registration:
                  type: string
                currency_id:
                  type: string
                vat:
                  type: string
                language:
                  type: string
                contacts:
                  type: array
              type: object
            example:
              desc: 'Nome BP'
              group_id: ''
              supplier: 1
              customer: 0
              address_id: 845-10
              contact_id: 845-11
              business_registry_registration: 12545-65-566
              currency_id: USD
              vat: '0124564897'
              language: it
              bp_category_id: D
              is_sales: 1
              is_shipping: 0
              is_invoice: 0
              is_purchase: 0
              is_carrier: 0
              is_blocked: 0
              is_active: 1
              naics_l1: ''
              naics_l2: ''
              naics_l3: ''
              sales_currency_id: ''
              sales_internal_contact_id: ''
              sales_external_contact_id: ''
              sales_document_language_id: ''
              sales_address_id: ''
              sales_contact_id: ''
              sales_has_chiorino_stamp: ''
              sales_order_type_id: ''
              shipping_carrier_id: ''
              shipping_document_language_id: ''
              shipping_delivery_term_id: ''
              shipping_address_id: ''
              shipping_contact_id: ''
              invoice_address_id: ''
              invoice_contact_id: ''
              invoice_payment_term_id: ''
              invoice_payment_method_id: ''
              invoice_shipping_method_id: ''
              invoice_document_language_id: ''
              purchase_address_id: ''
              purchase_contact_id: ''
              purchase_currency_id: ''
              purchase_payment_term_id: ''
              purchase_payment_method_id: ''
              purchase_document_language_id: ''
              contacts:
                -
                  contact_id: 845-53
                  quotation: 1
                  order_confirmation: 0
                  billing: 0
                  delivery_note: 1
              addresses:
                -
                  address_id: 845-8
                  is_sales: 0
                  is_shipping: 1
                  is_invoice: 1
                  is_purchase: 0
                -
                  address_id: 845-10
                  is_sales: 0
                  is_shipping: 1
                  is_invoice: 1
                  is_purchase: 0
              bank_accounts:
                -
                  name: 'Bank 1'
                  address_id: 845-10
                  swift_code: 45fd3
                  iban: ITxxxxxx
                -
                  name: 'Bank 2'
                  address_id: 845-12
                  swift_code: jgk45
                  iban: DExxxxxx
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/bp/{id}':
    get:
      tags:
        - BP
        - masterdata_business_partner.php
      summary: 'BP show'
      operationId: 361ab5b5b201eb911f86046873205b3c
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - BP
        - masterdata_business_partner.php
      summary: 'Update BP'
      operationId: dae474bb62393aaa99b3d5ee999cb71a
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                desc:
                  type: string
                supplier:
                  type: boolean
                customer:
                  type: boolean
                address_id:
                  type: string
                contact_id:
                  type: string
                business_registry_registration:
                  type: string
                currency_id:
                  type: string
                vat:
                  type: string
                language:
                  type: string
                contacts:
                  type: array
              type: object
            example:
              desc: 'Nome BP'
              group_id: ''
              supplier: 1
              customer: 0
              address_id: 845-10
              contact_id: 845-11
              business_registry_registration: 12545-65-566
              currency_id: USD
              vat: '0124564897'
              language: it
              bp_category_id: D
              is_sales: 1
              is_shipping: 0
              is_invoice: 0
              is_purchase: 0
              is_carrier: 0
              is_blocked: 0
              is_active: 1
              naics_l1: ''
              naics_l2: ''
              naics_l3: ''
              sales_currency_id: ''
              sales_internal_contact_id: ''
              sales_external_contact_id: ''
              sales_document_language_id: ''
              sales_address_id: ''
              sales_contact_id: ''
              sales_has_chiorino_stamp: ''
              sales_order_type_id: ''
              shipping_carrier_id: ''
              shipping_document_language_id: ''
              shipping_delivery_term_id: ''
              shipping_address_id: ''
              shipping_contact_id: ''
              invoice_address_id: ''
              invoice_contact_id: ''
              invoice_payment_term_id: ''
              invoice_payment_method_id: ''
              invoice_shipping_method_id: ''
              invoice_document_language_id: ''
              purchase_address_id: ''
              purchase_contact_id: ''
              purchase_currency_id: ''
              purchase_payment_term_id: ''
              purchase_payment_method_id: ''
              purchase_document_language_id: ''
              contacts:
                -
                  contact_id: 845-53
                  quotation: 1
                  order_confirmation: 0
                  billing: 0
                  delivery_note: 1
              addresses:
                -
                  address_id: 845-8
                  is_sales: 0
                  is_shipping: 1
                  is_invoice: 1
                  is_purchase: 0
                -
                  address_id: 845-10
                  is_sales: 0
                  is_shipping: 1
                  is_invoice: 1
                  is_purchase: 0
              bank_accounts:
                -
                  name: 'Bank 1'
                  address_id: 845-10
                  swift_code: 45fd3
                  iban: ITxxxxxx
                -
                  name: 'Bank 2'
                  address_id: 845-12
                  swift_code: jgk45
                  iban: DExxxxxx
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - BP
        - masterdata_business_partner.php
      summary: 'Delete BP'
      operationId: 00bcb02f4f0d5c1e1f97dc7e673a4651
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BP'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /bp/naics:
    get:
      tags:
        - BP
      summary: 'Get available naics code'
      operationId: 515220e5ecdec5e2f5f14687800c073a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/NaicsCodeResource' } }
                type: object
  /bp/categories:
    get:
      tags:
        - BP
      summary: 'Get available BP categories'
      operationId: cb8788222ca9ee8327cc6c0c854ae6bb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPCategoryResource' } }
                type: object
  '/bp/{id}/shipping-address':
    get:
      tags:
        - BP
      summary: 'Get available BP shipping addresses'
      operationId: e9adfaf83c77afad0cf91014ae70400a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AddressResource' } }
                type: object
  '/bp/{id}/invoice-address':
    get:
      tags:
        - BP
      summary: 'Get available BP invoice addresses'
      operationId: 237178db2140a6dc396803b10a162a74
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AddressResource' } }
                type: object
  '/bp/{id}/addresses/{type}':
    get:
      tags:
        - BP
      summary: 'Get available BP addresses by type'
      operationId: a62a887b46b4a105f0c6b593f032cbd2
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/AddressResource' } }
                type: object
  '/bp/{id}/contacts/{type}':
    get:
      tags:
        - BP
      summary: 'Get available BP contacts by type'
      operationId: 8f2fb35980f5fad9a169326834d46b64
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ContactResource' } }
                type: object
  '/bp/{id}/destinations':
    get:
      tags:
        - BP
        - masterdata_business_partner_dest.php
      summary: 'BP Destinations list'
      operationId: af3163cc819b83b09c4ddc9e95883738
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/BPDestinationResource' } }
                type: array
    post:
      tags:
        - BP
        - masterdata_business_partner_dest.php
      summary: 'Create new BP Destination'
      operationId: 48b5be6486f25d0002c5bd99206b10da
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
              properties:
                desc:
                  type: string
              type: object
            example:
              desc: 'Nome destinazione'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPDestinationResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/bp/{id}/destinations/{destination_id}':
    get:
      tags:
        - BP
        - masterdata_business_partner_dest.php
      summary: 'BP Destination show'
      operationId: 334c4958e23a0bddee133cac8ebc15cb
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/destination_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - BP
        - masterdata_business_partner_dest.php
      summary: 'Update BP Destination'
      operationId: ac92e1d7b49ec02a0939c6e79be610c8
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/destination_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                desc:
                  type: string
              type: object
            example:
              desc: 'Nome destinazione'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPDestinationResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - BP
        - masterdata_business_partner_dest.php
      summary: 'Delete BP destination'
      operationId: 404f95e10109da649ecf13a712e9f950
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/destination_id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /bp-groups:
    get:
      tags:
        - 'BP Groups'
      summary: 'Get list of bp groups'
      operationId: e49f2eb6309b47f382b9cbc1c2a2d477
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPGroupResource' } }
                type: object
    post:
      tags:
        - 'BP Groups'
      summary: 'Create new bp group'
      operationId: b62e02ab8fd4a2075ea7687b2d4d184b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
              type: object
            example:
              name: Exclusive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPGroupResource' } }
                type: object
  '/bp-groups/{id}':
    get:
      tags:
        - 'BP Groups'
      summary: 'Get details of bp group'
      operationId: 025e5e02146a5abd5f8f0981154e6f06
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPGroupResource' } }
                type: object
    put:
      tags:
        - 'BP Groups'
      summary: 'Update bp group'
      operationId: aad2e3261809c7f29b76deeb71327807
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
              type: object
            example:
              name: Exclusive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPGroupResource' } }
                type: object
    delete:
      tags:
        - 'BP Groups'
      summary: 'Delete bp group'
      operationId: 8d32c260dc24cbee90473520b4a1d868
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BPGroupResource' } }
                type: object
  /companies:
    get:
      tags:
        - Companies
      summary: 'Avalilable companies list'
      operationId: 08ed2ae55723c6a9506353eab8145498
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyResource'
  '/companies/{id}/warehouses':
    get:
      tags:
        - Companies
      summary: 'Avalilable company warehouses list'
      operationId: 675e527578588e11683fe03fe62fbeef
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseResource'
  '/companies/{id}/workcenters':
    get:
      tags:
        - Companies
      summary: 'Avalilable company workcenters list'
      operationId: 3672e1e101ec832f682e08d480a257b3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkcenterResource'
  '/companies/{id}/employees':
    get:
      tags:
        - Companies
      summary: 'Avalilable company employees list'
      operationId: d477e1dafef63b480847bbdf6b2eb355
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactResource'
  /configurator/init:
    post:
      tags:
        - Configurator
      summary: 'Start product configuration'
      operationId: 174c5b6f7c51bac64036abdaf6105a81
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - product
                - bp
              properties:
                product:
                  type: string
                bp:
                  type: string
              type: object
            example:
              product: '<standard product code>'
              bp: 845-10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConfiguratorResponseTypeResource' } }
                type: object
  /configurator/event:
    post:
      tags:
        - Configurator
      summary: 'Send a configuration event in product configuration'
      operationId: 9d6a0faee31ae6c16ce9ae2b44eda19f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - product
                - bp
                - configuration
                - event
                - event_data
              properties:
                product:
                  type: string
                bp:
                  type: string
                configuration:
                  type: object
                event:
                  type: string
                event_data:
                  type: object
              type: object
            example:
              product: '<standard product code>'
              bp: 845-10
              configuration:
                feature: 'feature value'
                '0': feature2
                '1': 'feature2 value'
              event: feature_change
              event_data:
                feature: 'changed feature id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConfiguratorResponseTypeResource' } }
                type: object
  /configurator/complete:
    post:
      tags:
        - Configurator
      summary: 'Complete the product configuration'
      operationId: 40ee7582f25c8bc136db303170203825
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - product
                - bp
                - configuration
              properties:
                product:
                  type: string
                bp:
                  type: string
                configuration:
                  type: object
              type: object
            example:
              product: '<standard product code>'
              bp: 845-10
              configuration:
                feature: 'feature value'
                '0': feature2
                '1': 'feature2 value'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConfiguratorResponseTypeResource' } }
                type: object
  /configurator/authorize-debug:
    post:
      tags:
        - Configurator
      summary: 'Authorize the user to receive debug data'
      operationId: b39e174c2fb9988faef3b83d8bd7b582
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - socket_id
              properties:
                socket_id:
                  type: string
              type: object
            example:
              socket_id: adasaadadffsdf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array }
                type: object
  /constraints/:
    get:
      tags:
        - Constraints
      summary: 'Get available constraints'
      operationId: dfe5a530b333a9bd0173f91226aecb22
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConstraintTypeResource' } }
                type: object
  /constraints:
    post:
      tags:
        - Constraints
      summary: 'Create new Constraint'
      operationId: 86e4d0e9ef3c043e62641aa6a1654db6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - label
                - body
                - constraint_type_id
                - subtype
              properties:
                id:
                  type: string
                label:
                  type: string
                description:
                  type: string
                body:
                  type: object
                constraint_type_id:
                  description: "set as 'configurator' for constraints to use in product config"
                  type: string
                subtype:
                  type: string
                is_draft:
                  type: boolean
                company_id:
                  type: integer
              type: object
            example:
              id: enable_feature_width
              label: 'Enable the width feature'
              description: 'Constraint to enable the width feature'
              body: '<blockly json>'
              constraint_type_id: configurator
              subtype: activation
              is_draft: true
              company_id: 845
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/constraints/{id}':
    get:
      tags:
        - Constraint
      summary: 'Constraint show'
      operationId: 289a02757b61e7aa043e6cc2d1459b20
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Constraints
      summary: 'Update Constraint'
      operationId: 25220771ed2329ae1a99e7c2a479b50c
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                label:
                  type: string
                description:
                  type: string
                body:
                  type: object
                is_draft:
                  type: boolean
                company_id:
                  type: integer
              type: object
            example:
              label: 'Enable the width feature'
              description: 'Constraint to enable the width feature'
              body: '<blockly json>'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Constraints
      summary: 'Delete Constraint'
      operationId: f843c593d2c1bc13b020fbcd4e853357
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constraint'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/constraints/{id}/clone':
    post:
      tags:
        - Constraints
      summary: 'Clone a Constraint'
      operationId: 80f057fe2eca5339cbbfeb071d1647df
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - new_id
              properties:
                new_id:
                  type: string
              type: object
            example:
              new_id: cloned_enable_feature_width
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /constraints/types:
    get:
      tags:
        - 'Constraint Types'
      summary: 'Get available constraint types'
      operationId: 19904bb045b4e1cf49f9c7f84d4d97ec
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConstraintTypeResource' } }
                type: object
  '/constraints/type/{id}':
    get:
      tags:
        - 'Constraint Types'
      summary: 'Constraint show'
      operationId: 6701489be5d48282ab97f3c2a16812b3
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintTypeResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  /contacts:
    get:
      tags:
        - Contacts
      summary: 'Get list of contacts'
      operationId: 7b8056a6c305d3995f6d8cc46d3cae65
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ContactResource' } }
                type: object
    post:
      tags:
        - Contacts
      summary: 'Create new contact'
      operationId: 292652dc2e92a1f2c52aa7c864b8f718
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - type
                - name
                - language
                - is_employee
              properties:
                type:
                  type: string
                name:
                  type: string
                note:
                  type: string
                contact_type_id:
                  type: integer
                department:
                  type: string
                address_id:
                  type: string
                office_phone:
                  type: string
                mobile_phone:
                  type: string
                email:
                  type: string
                language:
                  type: string
                is_employee:
                  type: boolean
              type: object
            example:
              type: person
              name: John
              note: note
              contact_type_id: 1
              department: Production
              address_id: null
              office_phone: null
              mobile_phone: null
              email: null
              language: en
              is_employee: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: 'Get details of single contact'
      operationId: 371008c3a140dc687487e65c833b4c05
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    put:
      tags:
        - Contacts
      summary: 'Update contact'
      operationId: 988ee956022c57234f5b5871a911543d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - type
                - name
                - language
                - is_employee
              properties:
                type:
                  type: string
                name:
                  type: string
                note:
                  type: string
                contact_type_id:
                  type: integer
                department:
                  type: string
                address_id:
                  type: string
                office_phone:
                  type: string
                mobile_phone:
                  type: string
                email:
                  type: string
                language:
                  type: string
                is_employee:
                  type: boolean
              type: object
            example:
              type: person
              name: John
              note: note
              contact_type_id: 1
              department: Production
              address_id: null
              office_phone: null
              mobile_phone: null
              email: null
              language: en
              is_employee: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Contacts
      summary: 'Delete contact'
      operationId: aa6804ea70c88459eaa3b88c8bab0195
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /contacts/types:
    get:
      tags:
        - 'Contact Types'
      summary: 'Get available contact types'
      operationId: 156c63c597debec45a7c4f4840b1e594
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ContactTypeResource' } }
                type: object
  /currencies:
    get:
      tags:
        - Currency
      summary: 'Get available currencies list'
      operationId: 11ba51d6025f25a760f405e99468818d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CurrencyResource' } }
                type: object
  /function-categories/:
    get:
      tags:
        - 'Custom Function Categories'
      summary: 'Get available custom function categories tree'
      operationId: a892a0969453a89eb1b1fd59ad1947a5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CustomFunctionCategoryTypeResource' } }
                type: object
  /function-categories:
    post:
      tags:
        - 'Custom Function Categories'
      summary: 'Create new custom function category'
      operationId: 42280e877529750d34058cdf84ff8739
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
              type: object
            example:
              name: 'Price Functions'
              parent_id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionCategoryResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/function-categories/{id}':
    get:
      tags:
        - 'Custom Function Categories'
      summary: 'Custom Function Categories show'
      operationId: e159a7634c93af13e2054ab68924fbf2
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionCategoryResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - 'Custom Function Categories'
      summary: 'Update Custom Function Category'
      operationId: ec72bec17d5e57173fb524eb63b094d4
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
              type: object
            example:
              name: 'Price Functions'
              parent_id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Custom Function Categories'
      summary: 'Delete Custom Function Categories'
      operationId: 3ce16db710401197fb5d8d6bd259792d
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionCategory'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /functions/:
    get:
      tags:
        - 'Custom Function'
      summary: 'Get available custom functions'
      operationId: 468f10f617961c7f584186c3f41cc114
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CustomFunctionTypeResource' } }
                type: object
  /functions:
    post:
      tags:
        - 'Custom Functions'
      summary: 'Create new custom function'
      operationId: 8aa7a97beb993cd401424037d6889b1b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - label
                - arguments
                - body
              properties:
                id:
                  type: string
                label:
                  type: string
                description:
                  type: string
                arguments:
                  type: object
                body:
                  type: object
                custom_function_category_id:
                  type: integer
              type: object
            example:
              id: get_price
              label: 'Get Product Price'
              description: 'Function for getting product price'
              arguments: '[{"name": "productId"}]'
              body: '<blockly json>'
              custom_function_category_id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/functions/{id}':
    get:
      tags:
        - 'Custom Functions'
      summary: 'Custom Function show'
      operationId: 13045b241f3225c0041fdfbbfff20ad0
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - 'Custom Functions'
      summary: 'Update Custom Function'
      operationId: f4711c5971398e2cc68bb11fc854b60c
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                label:
                  type: string
                description:
                  type: string
                arguments:
                  type: object
                body:
                  type: object
                custom_function_category_id:
                  type: integer
              type: object
            example:
              id: get_price
              label: 'Get Product Price'
              description: 'Function for getting product price'
              arguments: '[{"name": "productId"}]'
              body: '<blockly json>'
              custom_function_category_id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunctionResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Custom Function'
      summary: 'Delete Custom Function'
      operationId: adac316fdeda34a55c32526120fc280e
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFunction'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/functions/{id}/test':
    post:
      tags:
        - 'Custom Function'
      summary: 'Test custom function'
      operationId: 9792bbceedbd68e10ee8663fd1c3ce03
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - params
              properties:
                params:
                  type: object
              type: object
            example:
              params:
                arg1: val
                arg2: val2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ConfiguratorResponseTypeResource' } }
                type: object
  /cutting:
    get:
      tags:
        - cutting
        - cutting.php
      summary: 'List of cutting and lots data'
      operationId: a8c41f0dc89f0c6d562bddb94ec39671
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRLYF22002689
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    put:
      tags:
        - Cutting
      summary: 'Update cutting rows'
      operationId: 104910553578338dfc28766339c07f9c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - cuts
                - idLot
              properties:
                cuts:
                  type: array
                idLot:
                  type: string
              type: object
            example:
              idLot: FRLYF20002773
              cuts:
                '143781':
                  la: 400
                  lu: 200
                  pz: 4
              plannedDate: '2023-05-29'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - Cutting
      summary: 'Create new cutting row'
      operationId: a1f9793730e5abe94843476bd063eaf4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
                - la
                - lu
                - pz
                - stepRoll
                - stepRollOrder
                - idWarehouseLocation
              properties:
                idLot:
                  type: string
                la:
                  type: number
                  format: float
                lu:
                  type: number
                  format: float
                pz:
                  type: integer
                stepRoll:
                  type: boolean
                stepRollOrder:
                  type: int|null
                idWarehouseLocation:
                  type: integer
                ordRef:
                  type: string|null
              type: object
            example:
              idLot: FRLYF22002689
              la: 200
              lu: 400
              pz: 3
              idWarehouseLocation: 503
              stepRoll: 0
              stepRollOrder: 4
              ordRef: ''
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/cutting/{id}':
    delete:
      tags:
        - Cutting
      summary: 'Delete cutting row'
      operationId: b8fc3dc157d2a9741e61118d0bd11761
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /cutting/confirm:
    post:
      tags:
        - Cutting
      summary: 'Confirm cutting order'
      operationId: faa7c930fe54cb9c08dc1144fd87acc1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRLYF20002773
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /delivery-terms:
    get:
      tags:
        - 'Delivery terms'
      summary: 'Get list of delivery terms'
      operationId: 27c47b91a7d3fac600702cc4f86991ab
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DeliveryTermResource' } }
                type: object
  '/delivery-terms/{id}':
    get:
      tags:
        - 'Delivery terms'
      summary: 'Get details of single delivery term'
      operationId: 1112bc450d0a64cccbe07a560f5b5d78
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DeliveryTermResource' } }
                type: object
  /document-languages:
    get:
      tags:
        - 'Document languages'
      summary: 'Get list of document languages'
      operationId: 8156184f1857dcf4e3693a50f2424db9
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/DocumentLanguageResource' } }
                type: object
  '/document-languages/{id}':
    get:
      tags:
        - 'Document languages'
      summary: 'Get details of single document language'
      operationId: d459dda4ba4742bf58719647d3364431
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/OrderTypeResource' } }
                type: object
  /features/types:
    get:
      tags:
        - Features
      summary: 'Get available feature types list'
      operationId: c613d8ec12bea8133916f57487d77331
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/FeatureTypeResource' } }
                type: object
  /features/attributes:
    get:
      tags:
        - Features
      summary: 'Get available feature special attribute list'
      operationId: 2d369cfcf2f21add3edba8373a83a6f5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/FeatureAttributeResource' } }
                type: object
  /features:
    get:
      tags:
        - Features
      summary: 'Features list'
      operationId: ee5975182b2af0f6aaaea16770fed9e2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/FeatureResource' } }
                type: object
    post:
      tags:
        - Features
      summary: 'Create new feature'
      operationId: d767603e594cf0d9d3e7a5394c1b4972
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - label
                - feature_type_id
              properties:
                id:
                  type: string
                label:
                  type: string
                feature_type_id:
                  type: string
              type: object
            example:
              id: width
              label: Width
              feature_type_id: int
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/features/{id}':
    get:
      tags:
        - Features
      summary: 'Feature show'
      operationId: 7b8010cf91146aa6ff8cdca7c279827a
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Features
      summary: 'Update Feature'
      operationId: 6fb09f44046d8950d4f570dfa9730295
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                label:
                  type: string
                feature_type_id:
                  type: string
              type: object
            example:
              label: Width
              feature_type_id: int
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Features
      summary: 'Delete Feature'
      operationId: 0a6453b48ec275eeb3745b5dac0c9361
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /geo/nations:
    get:
      tags:
        - Geographic
      summary: 'Get available nation list'
      operationId: 0618ca483c4967af96240084380960f4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/NationResource' } }
                type: object
  /geo/provinces:
    get:
      tags:
        - Geographic
      summary: 'Get available province list'
      operationId: 1fd1b81a5556caf5430b18035328112b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProvinceResource' } }
                type: object
    post:
      tags:
        - Geographic
      summary: 'Create new province'
      operationId: f69d2c932c5258985312eab13cb6f1c5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - code
                - nation_id
              properties:
                name:
                  type: string
                code:
                  type: string
                nation_id:
                  type: string
              type: object
            example:
              name: Biella
              code: BI
              nation_id: IT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/geo/provinces/{id}':
    put:
      tags:
        - Geographic
      summary: 'Edit a province'
      operationId: 91170d525930c510d95360bbdd89cb57
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                code:
                  type: string
                nation_id:
                  type: string
              type: object
            example:
              name: Biella
              code: BI
              nation_id: IT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Geographic
      summary: 'Delete Province'
      operationId: e136bf32c18ffbac932771608a2fb210
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /geo/cities:
    get:
      tags:
        - Geographic
      summary: 'Get available city list'
      operationId: c75c6cec665061f6e4f67692ecc03622
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CityResource' } }
                type: object
    post:
      tags:
        - Geographic
      summary: 'Create new city'
      operationId: 651cec19978205df3e20a761ed200fa5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - nation_id
              properties:
                name:
                  type: string
                province_id:
                  type: number
                nation_id:
                  type: string
              type: object
            example:
              name: Biella
              province_id: 1
              nation_id: IT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/cities/{id}':
    put:
      tags:
        - Geographic
      summary: 'Edit a city'
      operationId: 23b67aa89fdaf78d3014ec6fd5599d47
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                province_id:
                  type: string
                nation_id:
                  type: string
              type: object
            example:
              name: Biella
              province_id: 1
              nation_id: IT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/geo/cities/{id}':
    delete:
      tags:
        - Geographic
      summary: 'Delete city'
      operationId: c2f3adeed7d152102b6225e8c4fbd021
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /geo/zips:
    get:
      tags:
        - Geographic
      summary: 'Get available zip list'
      operationId: 5857b41f7f21283a6d206895853df97a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ZipResource' } }
                type: object
    post:
      tags:
        - Geographic
      summary: 'Create new zip'
      operationId: cb3a821113e3927bca33e73f0267ed09
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - city_id
              properties:
                code:
                  type: string
                city_id:
                  type: number
                description:
                  type: string
              type: object
            example:
              code: '13900'
              city_id: 1
              description: Biella
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZipResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/geo/zips/{id}':
    put:
      tags:
        - Geographic
      summary: 'Edit zip'
      operationId: 0c547caa8edbfb019c53eb483a37ae5c
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                city_id:
                  type: number
                description:
                  type: string
              type: object
            example:
              code: '13900'
              city_id: 1
              description: Biella
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZipResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Geographic
      summary: 'Delete zip'
      operationId: c3e6916876ff3db409df78a6c01e0043
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /inventory:
    get:
      tags:
        - Inventory
      summary: 'Get inventory list'
      operationId: 01a326e9f03beea7297cbbd57e28f85f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InventoryResource' } }
                type: object
        '401':
          description: Unauthorized
    post:
      tags:
        - Inventory
      summary: 'Create new inventory'
      operationId: 30dd993b52009811c969545edf947059
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
              properties:
                desc:
                  type: string
              type: object
            example:
              desc: 'Inventory test'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/inventory/{idInventory}/conclude':
    put:
      tags:
        - Inventory
      summary: 'Conclude active inventory'
      operationId: 067c0408ab80ae25239c61e10963d44e
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/inventory/{idInventory}':
    get:
      tags:
        - Inventory
      summary: 'Get details of inventory'
      operationId: 15dc7b2b061ed9c222420cb5e6172247
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /invoice-shipping-methods:
    get:
      tags:
        - 'Invoice shipping methods'
      summary: 'Get list of invoice shipping method'
      operationId: cca916b922b6b680637b84c969a9804f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InvoiceShippingMethodResource' } }
                type: object
  '/invoice-shipping-methods/{code}':
    get:
      tags:
        - 'Invoice shipping methods'
      summary: 'Get details of single invoice shipping method'
      operationId: ba37a05b26a39cacee5a97288bdf2fdb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InvoiceShippingMethodResource' } }
                type: object
  /items-classification:
    get:
      tags:
        - 'Items Classification'
      summary: 'Get list of items classification'
      operationId: e309dee80702bffca18c955b6f994b81
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ItemResource' } }
                type: object
  /items:
    get:
      tags:
        - Items
        - masterdata_item.php
      summary: 'Item list'
      operationId: 1ce86fb166d24e47d4923801b137ef2a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/ItemResource' } }
                type: array
    post:
      tags:
        - Item
        - masterdata_item_add.php
      summary: 'Create new Item'
      operationId: d4b4bdc9486ae3e0676b9c0e5cc42b61
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - item_desc
                - um
                - item_group
              properties:
                item_desc:
                  type: string
                um:
                  type: string
                item_group:
                  type: string
              type: object
            example:
              item_desc: 'Nome Item'
              um: 'N'
              item_group: NA
              item_subgroup: 0-176
              weight_um: kg
              weight: '10'
              product_line: 0-322
              customs_code: ''
              number_of_plies: '0'
              type: purchased
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /items/enabled:
    get:
      tags:
        - Items
        - masterdata_item.php
      summary: 'Enabled Item list'
      operationId: 1499b6a63200d528fd864a2e2f3ba110
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/ItemResource' } }
                type: array
  /items/disabled:
    get:
      tags:
        - Items
        - masterdata_item.php
      summary: 'Disabled Item list'
      operationId: 5bd933d46b915e560425baafa12560c1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/ItemResource' } }
                type: array
  /items/autocomplete:
    get:
      tags:
        - Items
      summary: 'Items search for autocomplete'
      operationId: c94a5da900b6fbcd093b934e5bd30105
      parameters:
        -
          name: search
          in: query
          required: true
        -
          name: enabled
          in: query
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/ItemResource' } }
                type: array
  '/items/{item}/toggle/{enable}':
    put:
      tags:
        - Item
        - masterdata_item_add.php
      summary: 'Enable ot Disable Item'
      operationId: f56892acd45c13a0002126bd98b50945
      parameters:
        -
          $ref: '#/components/parameters/item'
        -
          $ref: '#/components/parameters/enable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/items/{item}/alternative':
    put:
      tags:
        - Item
        - masterdata_item_alternative.php
      summary: 'Set Item lternative code and description'
      operationId: aabe489439c189bd70138ab1508f386e
      parameters:
        -
          $ref: '#/components/parameters/item'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - altv_code
                - altv_desc
              properties:
                altv_code:
                  type: string
                altv_desc:
                  type: string
              type: object
            example:
              altv_code: 'Alt Code'
              altv_desc: 'Alt Description'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '400':
          description: 'Item is not enabled'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /items/groups:
    get:
      tags:
        - Item
        - masterdata_item_add.php
      summary: 'Get available item groups'
      operationId: f0dbf75ba4f332d97bee3a44ef12cd03
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemGroupResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/companies/{company}/items/groups':
    get:
      tags:
        - Item
        - masterdata_item_add.php
      summary: 'Get available item groups for a company'
      operationId: 1f250e29472892c6ea643bb48bb7e84a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemGroupResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/items/{id}':
    get:
      tags:
        - Item
        - masterdata_item.php
      summary: 'Item show'
      operationId: 07b281b7f44ef98d4983434f2a810753
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Item
        - masterdata_item_add.php
      summary: 'Update Item'
      operationId: af81c8b66985e6d0a51ba49176f19797
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
              properties:
                desc:
                  type: string
              type: object
            example:
              item_desc: 'Nome Item'
              um: 'N'
              item_group: NA
              item_subgroup: 0-176
              weight_um: kg
              weight: '10'
              product_line: 0-322
              customs_code: ''
              number_of_plies: '0'
              type: purchased
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Item
        - masterdata_item.php
      summary: 'Delete Item'
      operationId: 788ef26319b67447e0343b342a85ac6d
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/items/{id}/configuration-details':
    get:
      tags:
        - Item
        - masterdata_item.php
      summary: 'Get the product configuration in a human readable way'
      operationId: 50d374d5d454849598fde29509ce9808
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '404':
          description: 'Not Found'
        '400':
          description: 'Bad request'
        '403':
          description: Unauthorized
  '/items/{id}/stock-limits':
    get:
      tags:
        - Item
        - masterdata_item_stock_limits.php
      summary: 'Get all item stock limits'
      operationId: 86cc22eeb50e3ec416eb3b46d38fefbd
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemStockLimitResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Item
        - masterdata_item_stock_limits.php
      summary: 'Update Item'
      operationId: 389bbc24c88c92ad98c711c937807567
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - IDwarehouse
                - qty_min
                - qty_max
              properties:
                IDwarehouse:
                  type: integer
                qty_min:
                  type: number
                qty_max:
                  type: number
              type: object
            example:
              IDwarehouse: 1
              qty_min: 10
              qty_max: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/items/{id}/stock-limits-history':
    get:
      tags:
        - Item
        - masterdata_item_stock_limits.php
      summary: 'Get all item stock limits history'
      operationId: 30e1487b82a1f4c539b1007b9e4bf534
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemStockLimitResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  '/items/{id}/load-new-lot':
    post:
      tags:
        - Item
        - adjustments_new_lots.php
      summary: 'Load new lot'
      operationId: 39b6073839c50d5e8046a7ba3fc5fc61
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idAdjustmentType
                - lotText
                - eur1
                - confItem
                - mergedLot
                - idWarehouse
                - idWarehouseLocation
                - dadLot
                - de
                - di
                - la
                - lu
                - pz
              properties:
                idAdjustmentType:
                  type: integer
                lotText:
                  type: string
                eur1:
                  type: boolean
                confItem:
                  type: boolean
                mergedLot:
                  type: boolean
                idWarehouse:
                  type: integer
                idWarehouseLocation:
                  type: integer
                dadLot:
                  type: string|null
                de:
                  type: float|null
                di:
                  type: float|null
                la:
                  type: float|null
                lu:
                  type: float|null
                pz:
                  type: float|null
              type: object
            example:
              idAdjustmentType: 4
              lotText: 'lotto di prova'
              eur1: 0
              confItem: 0
              mergedLot: 0
              idWarehouse: 4
              idWarehouseLocation: 524
              dadLot: null
              de: 0
              di: 0
              la: 10.23
              lu: 2.34
              pz: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  /items/types:
    get:
      tags:
        - Item
        - masterdata_item.php
      summary: 'Get list of available item types'
      operationId: a82dfcb538682983803acf5e3c0a8be3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /items-lines:
    get:
      tags:
        - 'Items Lines'
      summary: 'Get list of items lines'
      operationId: 153f296117017ba0d036a57aa13c165a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ItemLineResource' } }
                type: object
  '/items-lines/{id}':
    get:
      tags:
        - 'Items Lines'
      summary: 'Get details of single item line'
      operationId: 40908049df5b16e9d981c81f7e493ecf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ItemLineResource' } }
                type: object
  /items-subfamilies:
    get:
      tags:
        - 'Items Sufamilies'
      summary: 'Get list of items subfamilies'
      operationId: 3b58f2d2fc8d92577f826963dc4b329d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ContactResource' } }
                type: object
  '/items-subfamilies/{id}':
    get:
      tags:
        - 'Items Sufamilies'
      summary: 'Get details of single item subfamily'
      operationId: 78470db973bb2381a1223268d40fc384
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ContactResource' } }
                type: object
  /languages:
    get:
      tags:
        - Languages
      summary: 'Get list of available languages'
      operationId: 91490910f351598e47e910cb1f5de5fb
      responses:
        '200':
          description: OK
  /lots:
    get:
      tags:
        - Lot
      summary: 'Get list of lots'
      operationId: 145a2a5703dc96cf72c4d5d386b415fe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  '/lots/{id}':
    get:
      tags:
        - Lot
        - lot_value_manual_insert.php
      summary: 'Lot show'
      operationId: 792d1a745e733de9c3282dc128978747
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  /lots/values:
    get:
      tags:
        - Lot
        - lot_value.php
      summary: 'Get lots values datatable'
      operationId: 329ecdfe9cf4ee8730f3c25724739f73
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/LotResource' } }
                type: object
    put:
      tags:
        - Lot
        - lot_value.php
      summary: 'Add value for lots in bulk'
      operationId: e91377ec781e668538c8d958600bb177
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - lots
              properties:
                lots:
                  type: object
              type: object
            example:
              lots:
                FRNAA23000003: 50
                FRNAA23000005: 20
                FRNAA23000009: 60
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/lots/{id}/value':
    put:
      tags:
        - Lot
        - lot_value.php
      summary: 'Add value for a single lot'
      operationId: 95bf3ab5ae188b428214278e11f708c2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  type: number
                note:
                  type: string
              type: object
            example:
              value: 50
              note: 'add operation note'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/lots/{id}/value-history':
    get:
      tags:
        - Lot
        - lot_value_history.php
      summary: 'Get lot values history'
      operationId: 9e6df2a67b6bf1c460177f155bfdb52e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  lot: { type: object, items: { $ref: '#/components/schemas/LotResource' } }
                  current_stock_value: { type: number }
                type: object
  '/lots/{id}/inventory-check':
    get:
      tags:
        - Lot
      summary: 'Check if lot is in inventory'
      operationId: 25f7eb58c7f5f5048b5fb2eff420f484
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  '/lots/{id}/text':
    put:
      tags:
        - Lot
      summary: 'Update text for a single lot'
      operationId: 5b0634f1b3877ee391d7d4db702639bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - note
                - ordRef
              properties:
                ordRef:
                  type: string
                note:
                  type: string
              type: object
            example:
              ordRef: '#xxxx'
              note: 'add operation note'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/lots/{id}/stocks':
    get:
      tags:
        - Lot
      summary: 'Get stocks by lot'
      operationId: 22e69e5f5f91ab45daa017d131c7987e
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  '/lots/{id}/info':
    put:
      tags:
        - Lot
      summary: 'Update info for a single lot'
      operationId: bc10d88ffeaac017186c273b9a5c2b43
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateLot
                - eur1
              properties:
                dateLot:
                  type: string
                  format: date
                eur1:
                  type: boolean
              type: object
            example:
              dateLot: '2023-05-25'
              eur1: 0
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /machines:
    get:
      tags:
        - Machines
      summary: 'Get list of machines'
      operationId: 5998a2cdaadf6f32ab905c78c5c60f12
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MachineResource' } }
                type: object
    post:
      tags:
        - Machines
      summary: 'Create new machine'
      operationId: 9c7c1a200dac4400582d7552961c1f20
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - workcenter_id
                - cost_item_id
                - men_occupation
              properties:
                code:
                  type: string
                workcenter_id:
                  type: string
                cost_item_id:
                  type: string
                description:
                  type: string
                men_occupation:
                  type: integer
              type: object
            example:
              code: machine_1
              workcenter_id: 845-1
              cost_item_id: 845-1028
              men_occupation: 2
              description: test
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
  '/machines/{id}':
    get:
      tags:
        - Machines
      summary: 'Get details of machine'
      operationId: 7b2a92bd0a873fb1adb329e771d9b59b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MachineResource' } }
                type: object
    put:
      tags:
        - Machines
      summary: 'Update machine'
      operationId: 6495cb40b92d773ef7758df26fedbc7d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - workcenter_id
                - cost_item_id
                - men_occupation
              properties:
                workcenter_id:
                  type: string
                cost_item_id:
                  type: string
                description:
                  type: string
                men_occupation:
                  type: integer
              type: object
            example:
              workcenter_id: 845-1
              cost_item_id: 845-1028
              men_occupation: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
    delete:
      tags:
        - Machines
      summary: 'Delete machine'
      operationId: 9cbc00780e4380f6622bb0589dce0f17
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/MachineResource' } }
                type: object
  /materials-issue:
    get:
      tags:
        - MaterialIssue
        - material_issue.php
      summary: 'Get list of materials issue'
      operationId: 45cd23dd47cb245a33f9cfef6e1aa983
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    post:
      tags:
        - MaterialIssue
        - material_issue.php
      summary: 'Create new materials issue'
      operationId: 42f58fea9cf1cacd7ec96bcd7701157c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStocks
              properties:
                idStocks:
                  type: array
              type: object
            example:
              idStocks:
                - 52722
                - 34455
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/materials-issue/{idIssue}':
    put:
      tags:
        - MaterialIssue
        - material_issue.php
      summary: 'Update qty for material issue'
      operationId: c97664a43e5180da069a552e8162d28b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - qty
              properties:
                qty:
                  type: number
                  format: float
              type: object
            example:
              qty: 2.947
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    delete:
      tags:
        - MaterialIssue
        - material_issue.php
      summary: 'Delete material issue'
      operationId: 7b525f0ba5d61cae7968c0005ca9ba40
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /materials-issue/confirm:
    post:
      tags:
        - MaterialIssue
        - material_issue.php
      summary: 'Confirm materials issue'
      operationId: f40ca2189772e28d763923cfc7dd3f33
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idBP
                - idDestination
                - ordRef
                - deliveryNote
              properties:
                idBP:
                  type: integer
                idDestination:
                  type: integer
                ordRef:
                  type: string
                deliveryNote:
                  type: string
              type: object
            example:
              idBP: 5903
              idDestination: 3469
              ordRef: 'Ordine #xxxx'
              deliveryNote: 'Note di prova'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /materials-transfer:
    get:
      tags:
        - MaterialTransfer
        - material_transfer.php
      summary: 'Get list of materials ready to transfer'
      operationId: a59cb0c43d6402687449bda99f3e69fb
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    post:
      tags:
        - MaterialTransfer
        - material_transfer.php
      summary: 'Create new materials transfer'
      operationId: ab0728f620602da22b9563a4328e835d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStocks
              properties:
                idStocks:
                  type: array
              type: object
            example:
              idStocks:
                - 52722
                - 34455
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/materials-transfer/{idTrans}':
    put:
      tags:
        - MaterialTransfer
        - material_transfer.php
      summary: 'Update qty for material transfer'
      operationId: 96bc3f046026ca8537b8521e6ca9b681
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - qty
              properties:
                qty:
                  type: number
                  format: float
              type: object
            example:
              qty: 2.947
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    delete:
      tags:
        - MaterialTransfer
        - material_transfer.php
      summary: 'Delete material transfer'
      operationId: a2eaa8badd6c4f9ff1b34d6df8df81c0
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /materials-transfer/confirm:
    post:
      tags:
        - MaterialTransfer
        - material_transfer.php
      summary: 'Confirm materials transfer'
      operationId: feb7ca4c7a7d6e91c628c6c1ce5b22b5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idWarehouse
                - idWarehouseLocation
              properties:
                idWarehouse:
                  type: integer
                idWarehouseLocation:
                  type: integer
              type: object
            example:
              idWarehouse: 1
              idWarehouseLocation: 236
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /order-lot-merge:
    get:
      tags:
        - order-lot-merge
      summary: 'List of lot to merge'
      operationId: 340886a986cf0f7faeb11da4ea06ff88
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStock
              properties:
                idStock:
                  type: integer
                idMerge:
                  type: int|null
              type: object
            example:
              idStock: 186615
              idMerge: 0
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - order-lot-merge
      summary: 'Create merge order by id stock'
      operationId: 1bc467739aa862010c51889a606e6b66
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStock
              properties:
                idStock:
                  type: integer
                idMerge:
                  type: int|null
              type: object
            example:
              idStock: 186615
              idMerge: 0
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /order-lot-merge/additional-lots:
    get:
      tags:
        - order-lot-merge
      summary: 'List of additional lots to merge'
      operationId: 8af2f9e7a88dbb0a42d2b2e633646d2e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idItem
                - idWarehouse
              properties:
                idItem:
                  type: integer
                idWarehouse:
                  type: integer
              type: object
            example:
              idItem: 3543
              idWarehouse: 17
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/order-lot-merge/{id}':
    delete:
      tags:
        - order-lot-merge
      summary: 'Delete row'
      operationId: 74acc72bd4b88cbae8d9079ce570f9a3
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /order-lot-merge/apply-return:
    post:
      tags:
        - order-lot-merge
      summary: 'Add dimensions of merged lot'
      operationId: 5ec43709ff44dc899cbbef7bec88a792
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idMerge
                - LA
                - LU
                - PZ
                - idWarehouseLocation
              properties:
                idMerge:
                  type: integer
                LA:
                  type: number
                  format: float
                LU:
                  type: number
                  format: float
                PZ:
                  type: integer
                idWarehouseLocation:
                  type: integer
              type: object
            example:
              idMerge: 10
              LA: 400
              LU: 200
              PZ: 1
              idWarehouseLocation: 375
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /orders-production:
    get:
      tags:
        - orders-production
      summary: 'List of order production, lot data and components'
      operationId: e1d9059f959ae24fb303e74d9d207adb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRVIF21000753
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    put:
      tags:
        - orders-production
      summary: 'Update components row to order production'
      operationId: b8629d00fd936e91beb66131f9167039
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - components
                - idLot
              properties:
                components:
                  type: array
                idLot:
                  type: string
              type: object
            example:
              idLot: FRNAA21001288
              components:
                '13374':
                  method: 0
                  qty: 0
                  idStock: 1315
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - orders-production
      summary: 'Add component to order production'
      operationId: 5291a77b5d8ec6ec99335c50096e679a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
                - idItem
              properties:
                idLot:
                  type: string
                idItem:
                  type: integer
              type: object
            example:
              idLot: FRVIF21000753
              idItem: 3539
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/orders-production/{id}':
    delete:
      tags:
        - orders-production
      summary: 'Delete order production component'
      operationId: d14da1af3c3c78de2c8a91468af0ed21
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /orders-production/confirm:
    post:
      tags:
        - orders-production
      summary: 'Confirm order production'
      operationId: 9fd96c290b8a21b0846a68a54199124b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRLYF20002773
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /order-split:
    get:
      tags:
        - order-split
      summary: 'List of lot to split and inserted cuts'
      operationId: 1c501228391bd9f36dabefbc3f5b73f8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStock
              properties:
                idStock:
                  type: integer
              type: object
            example:
              idStock: 41224
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - order-split
      summary: 'Add split to lot'
      operationId: adf4826be976b48efa8e3c23c9d52f82
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStock
                - qty
                - idWarehouseLocation
              properties:
                idStock:
                  type: integer
                qty:
                  type: int|float
                ordRef:
                  type: string|null
                idWarehouseLocation:
                  type: integer
              type: object
            example:
              idStock: 183151
              ordRef: ''
              qty: 1
              idWarehouseLocation: 1954
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  '/order-split/{id}':
    delete:
      tags:
        - order-split
      summary: 'Delete split row'
      operationId: 31055eefb6981171668f9631893c9b11
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /order-split/confirm:
    post:
      tags:
        - order-split
      summary: 'Confirm split order'
      operationId: 8692e9fc37601db3780b3d6904dcd43c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idStock
              properties:
                idStock:
                  type: integer
              type: object
            example:
              idStock: 183153
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /order-types:
    get:
      tags:
        - 'Order types'
      summary: 'Get list of order types'
      operationId: 9c21263e2ab39df8259d0a47c001458d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/OrderTypeResource' } }
                type: object
  '/order-types/{id}':
    get:
      tags:
        - 'Order types'
      summary: 'Get details of single order type'
      operationId: 756d675da07d22039da0ac0c7c162309
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/OrderTypeResource' } }
                type: object
  /payment-methods:
    get:
      tags:
        - 'Payment methods'
      summary: 'Get list of payment methods'
      operationId: 43e99677428b9254f374f5c67436aebf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PaymentMethodResource' } }
                type: object
  '/payment-methods/{code}':
    get:
      tags:
        - 'Payment methods'
      summary: 'Get details of single payment method'
      operationId: b1e64f5292a27945b253b3976e02d877
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PaymentMethodResource' } }
                type: object
  /payment-terms:
    get:
      tags:
        - 'Payment terms'
      summary: 'Get list of payment terms'
      operationId: 5906f592c6f4b0b9eddcee6f1c24eae4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PaymentTermResource' } }
                type: object
  '/payment-terms/{code}':
    get:
      tags:
        - 'Payment terms'
      summary: 'Get details of single payment term'
      operationId: d55fdd4cbb9da182f72e023e30dad19f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PaymentTermResource' } }
                type: object
  /permissions:
    get:
      tags:
        - Permissions
      summary: 'Permissions list'
      operationId: 8b2089df410846234e6e453c26a0f7e9
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: array, items: { $ref: '#/components/schemas/PermissionResource' } }
                type: array
  /print/cutting-order:
    get:
      tags:
        - print
      summary: 'Print pdf of cuttings order'
      operationId: 144901284f9b024be68d1223d0cf6758
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRLYF22002689
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /print/labels:
    get:
      tags:
        - print
      summary: 'Print label of lot or id stock'
      operationId: 7f97dd9b42b901231f0dbbebebfdb68d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - ids
              properties:
                ids:
                  type: string|int
              type: object
            example:
              ids:
                - FRVIA20001658
                - 610
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /print/label-range:
    get:
      tags:
        - print
      summary: 'Print label by range of lot or by delivery note'
      operationId: 55ff12df8268924b90e10309b833a3d6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                fromLot:
                  type: string
                toLot:
                  type: string
                deliveryNote:
                  type: string
              type: object
            example:
              fromLot: FRPRA22000459
              toLot: FRPRA22000464
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /processes:
    get:
      tags:
        - Processes
      summary: 'Get list of processes'
      operationId: 08be109c2e73c8dd672e2d139e4326cf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: object
    post:
      tags:
        - Processes
      summary: 'Create new process'
      operationId: 08691c0fc7d61322471c868d86211425
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - name
              properties:
                code:
                  type: string
                name:
                  type: string
                price_item_id:
                  type: string
                setup_price_item_id:
                  type: string
                operator_cost_item_id:
                  type: string
                execution_time:
                  type: integer
                setup_time:
                  type: integer
                men_occupation:
                  type: integer
                need_machine:
                  type: boolean
                machines:
                  type: object
              type: object
            example:
              id: process_4
              name: 'Process 4'
              price_item_id: 845-1
              setup_price_item_id: 845-2
              operator_cost_item_id: 845-3
              execution_time: 60
              setup_time: 120
              men_occupation: 2
              need_machine: true
              machines:
                -
                  machine_id: 845-1
                  workcenter_default: true
                -
                  machine_id: 845-2
                  workcenter_default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: object
  /processes/autocomplete:
    get:
      tags:
        - Processes
      summary: 'Processes search for autocomplete'
      operationId: 8bad4e81301cb8dea1daea86c319d884
      parameters:
        -
          name: search
          in: query
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: object, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: array
  '/processes/{id}':
    get:
      tags:
        - Processes
      summary: 'Get details of process'
      operationId: 282a4b0597c455e15d033df5c88ad66f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: object
    delete:
      tags:
        - Processes
      summary: 'Delete process'
      operationId: a69e2a301f8b636cbb4e0e20d9d60874
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: object
  '/processes{id}':
    put:
      tags:
        - Processes
      summary: 'Update existing process'
      operationId: 8472adce000f5c0cead38d7a784fac7e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                name:
                  type: string
                price_item_id:
                  type: string
                setup_price_item_id:
                  type: string
                operator_cost_item_id:
                  type: string
                execution_time:
                  type: integer
                setup_time:
                  type: integer
                men_occupation:
                  type: integer
                need_machine:
                  type: boolean
              type: object
            example:
              id: process_4
              name: 'Process 4'
              price_item_id: 845-1
              setup_price_item_id: 845-2
              operator_cost_item_id: 845-3
              execution_time: 60
              setup_time: 120
              men_occupation: 2
              need_machine: true
              machines:
                -
                  machine_id: 845-1
                  workcenter_default: true
                -
                  machine_id: 845-2
                  workcenter_default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProcessResource' } }
                type: object
  /purchase-price-lists:
    get:
      tags:
        - 'Purchase Price Lists'
      summary: 'Get purchase price lists'
      operationId: 2854f4e23740daad5bcc2909a4e25bc2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
    post:
      tags:
        - 'Purchase Price Lists'
      summary: 'Create purchase price list'
      operationId: 82aa469bcc9fe8d1f169f1321e89b2a4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - currency_id
              properties:
                code:
                  type: string
                currency:
                  type: string
              type: object
            example:
              code: purchase_price_list_eur
              currency_id: EUR
              bp_id: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
  '/purchase-price-lists/{id}':
    get:
      tags:
        - 'Purchase Price Lists'
      summary: 'Get details of purchase price list'
      operationId: b0dc88e0b40b19c31ef3a87044ec6446
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
    delete:
      tags:
        - 'Purchase Price Lists'
      summary: 'Delete purchase price list'
      operationId: f33e8bc7af3449ce6dc26d3a5227d448
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
  '/purchase-price-lists/{id}/toggle':
    put:
      tags:
        - 'Purchase Price Lists'
      summary: 'Enable/disable purchase price list'
      operationId: 130999b4de638181960c85c91da5723e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
  '/purchase-price-lists/{id}/clone':
    post:
      tags:
        - 'Purchase Price Lists'
      summary: 'Clone purchase price list'
      operationId: c0966ce070b1d84a61f91608092e9a4e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - currency_id
              properties:
                code:
                  type: string
                currency_id:
                  type: string
              type: object
            example:
              code: clone_test_usd
              currency_id: USD
              bp_id: ''
              price_change: -30
              rows:
                -
                  item_group_id: 845-10
                  price_change: 90
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
  '/purchase-price-lists/{id}/change-prices':
    put:
      tags:
        - 'Purchase Price Lists'
      summary: 'Change prices in purchase price list'
      operationId: 81e6b8e661210a1560f484796e230b68
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              price_change: -30
              rows:
                -
                  item_group_id: 845-10
                  price_change: 90
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListResource' } }
                type: object
  '/purchase-price-lists/{id}/rows':
    get:
      tags:
        - 'Purchase Price Lists'
      summary: 'Get purchase price lists rows'
      operationId: f0f67810638401ffd2053f308c2db2db
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListRowResource' } }
                type: object
    post:
      tags:
        - 'Purchase Price Lists'
      summary: 'Create purchase price list row'
      operationId: 709b5bab9d60f0082ee3ee6eccd31b51
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - order
                - price
              properties:
                order:
                  type: integer
                price:
                  type: number
                  format: float
              type: object
            example:
              order: 1
              item_id: 845-10
              item_group_id: ''
              item_subfamily_id: ''
              quantity: 10
              width: ''
              class: ''
              date_from: '2024-01-01'
              date_to: ''
              price: 15
              note: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListRowResource' } }
                type: object
  '/purchase-price-lists/{id}/rows/{idRow}':
    get:
      tags:
        - 'Purchase Price Lists'
      summary: 'Get details of purchase price lists row'
      operationId: 9f69ae74301fa552006464fbd6a6c0f8
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListRowResource' } }
                type: object
    delete:
      tags:
        - 'Purchase Price Lists'
      summary: 'Delete purchase price lists row'
      operationId: 6e6f8956463021df2088bf945d8affc6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListRowResource' } }
                type: object
  '/purchase-price-lists/{id}/rows/{idRow}/toggle':
    put:
      tags:
        - 'Purchase Price Lists'
      summary: 'Enable/disable purchase price list row'
      operationId: b3d735574034c68af6e57c47d32d7d2d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/PurchasePriceListRowResource' } }
                type: object
  /receipts/purchase:
    post:
      tags:
        - Receipts
      summary: 'Confirm receipt purchase'
      operationId: 3876141f0a7728fa13561fda2e71bb6b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - ordRiferimento
                - lotFornitore
                - deliveryNote
                - eur1
                - confItem
                - lotDate
                - idWarehouse
                - idWarehouseLocation
                - idItem
                - idBP
                - de
                - di
                - la
                - lu
                - pz
              properties:
                ordRiferimento:
                  type: string
                lotFornitore:
                  type: string
                deliveryNote:
                  type: string
                eur1:
                  type: boolean
                confItem:
                  type: boolean
                lotDate:
                  type: string
                  format: date
                idWarehouse:
                  type: integer
                idWarehouseLocation:
                  type: integer
                idItem:
                  type: integer
                idBP:
                  type: integer
                de:
                  type: float|null
                di:
                  type: float|null
                la:
                  type: float|null
                lu:
                  type: float|null
                pz:
                  type: float|null
              type: object
            example:
              ordRiferimento: 'MILTEC 117195'
              lotFornitore: ITBIF22047050
              deliveryNote: 'testo libero'
              eur1: 0
              confItem: 1
              lotDate: '2023-05-09'
              idWarehouse: 1
              idWarehouseLocation: 236
              idItem: 3539
              idBP: 6817
              de: 0
              di: 0
              la: 10.23
              lu: 2.34
              pz: 2
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /receipts/from-chiorino:
    get:
      tags:
        - Receipts
      summary: 'List of Receipt lots from Chiorino S.p.A,'
      operationId: 405d01c5bd2cb8a07a8794efa14077e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - deliveryNote
              properties:
                deliveryNote:
                  type: string
                idLot:
                  type: string|nullable
              type: object
            example:
              deliveryNote: '23E0000000000000388'
              idLot: ''
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
        '401':
          description: Unauthorized
  /receipts/from-chiorino/confirm:
    post:
      tags:
        - Receipts
      summary: 'Confirm receipt from chiorino'
      operationId: 4da72295400108fe10e4c83100a837e0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - deliveryNote
                - lots
              properties:
                deliveryNote:
                  type: string
                idLot:
                  type: string|nullable
                lots:
                  type: array
              type: object
            example:
              deliveryNote: '23E0000000000000388'
              idLot: ''
              lots:
                '886':
                  la: 40
                  lu: 35
                  de: 23
                  pz: 4
                  received: 1
                  ordRef: xxx
                  lotText: xxx
                  lotDate: '2020-05-05'
                  idWarehouse: 1
                  idWarehouseLocation: 293
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/cutting-history:
    get:
      tags:
        - Reports
      summary: 'Get report of cutting history'
      operationId: 54ae598eaeef0a0f1bd8c3a0b286095d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/cutting-waste:
    get:
      tags:
        - Reports
      summary: 'Get report of cutting waste'
      operationId: dc409731ffcfb78b2093fbbaf89168ac
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/cutting-waste/export:
    get:
      tags:
        - reports
      summary: 'Export cutting waste XLSX'
      operationId: 1fee0266a5a11687841ff1c842e9ca8c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
      responses:
        '200':
          description: OK
  /reports/cutting-active:
    get:
      tags:
        - Reports
      summary: 'Get report of cutting active'
      operationId: 9af3507225ad6f184a40485690756a3c
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/cutting-active/export:
    get:
      tags:
        - reports
      summary: 'Export active cutting XLSX'
      operationId: 59117a844f660402b426c1371ea3955d
      responses:
        '200':
          description: OK
  /reports/lot-tracking:
    get:
      tags:
        - Reports
      summary: 'Get report of lot tracking'
      operationId: d4dc5a010cb9e216adc16cbe1787d617
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRPRF23000004
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/lot-tracking/export:
    get:
      tags:
        - reports
      summary: 'Export lot tracking XLSX'
      operationId: 1b693ae573f6b5f5d73104d8bcd31ed2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idLot
              properties:
                idLot:
                  type: string
              type: object
            example:
              idLot: FRPRF23000004
      responses:
        '200':
          description: OK
  /reports/stock-by-width:
    get:
      tags:
        - Reports
      summary: 'Get report of stock by width'
      operationId: 36c5bcfaa0caffdbdfb85899df737af7
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/transaction-history:
    get:
      tags:
        - Reports
      summary: 'Get report of transaction history'
      operationId: e1af64de21949f2386542be2d303a38f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idTranType:
                  type: int|empty
                item:
                  type: string|empty
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idTranType: 2
              item: na30
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/transaction-history/export:
    get:
      tags:
        - reports
      summary: 'Export transaction history XLSX'
      operationId: d0c596342481819f22018f03cab86400
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idTranType:
                  type: int|empty
                item:
                  type: string|empty
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idTranType: 2
              item: na30
      responses:
        '200':
          description: OK
  /reports/unloaded-item:
    get:
      tags:
        - Reports
      summary: 'Get report of unloaded item'
      operationId: 2f2a528b531949b60f050c9e45d9b43b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/unloaded-item/export:
    get:
      tags:
        - reports
      summary: 'Export unloaded item XLSX'
      operationId: f6a428f98a0f519fee62281b06197c54
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
      responses:
        '200':
          description: OK
  /reports/lot-shipped-bp:
    get:
      tags:
        - Reports
      summary: 'Get report of lots shipped to BP'
      operationId: 1a513b468009c49179a129ae4f49b527
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
                - idBP
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idBP:
                  type: integer
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idBP: 4685
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/lot-shipped-bp/export:
    get:
      tags:
        - Reports
      summary: 'Export report of lots shipped to BP'
      operationId: 1ba436e4d13e40d3528e8dbfa0d3002e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
                - idBP
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idBP:
                  type: integer
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idBP: 4685
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/lot-received-bp:
    get:
      tags:
        - Reports
      summary: 'Get report of lots received from BP'
      operationId: 8322b4681d52a5a6f17da4c1d4ae67d2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
                - idBP
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idBP:
                  type: integer
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idBP: 4685
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/lot-received-bp/export:
    get:
      tags:
        - Reports
      summary: 'Export report of lots received from BP'
      operationId: 0ff5d9971c8af7a17f7aa60e8cbbe401
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
                - idBP
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idBP:
                  type: integer
              type: object
            example:
              dateFrom: '2020-05-10'
              dateTo: '2023-04-26'
              idBP: 4685
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/activity-viewer:
    get:
      tags:
        - Reports
      summary: 'Get report of activity '
      operationId: 12c14beb2aa580c583d02c97ce6e31c1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-limits:
    get:
      tags:
        - Reports
      summary: 'Get report of stock limits'
      operationId: 8ea1f548309c8e78510239a70ec5e36f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idWarehouse
              properties:
                idWarehouse:
                  type: int|empty
              type: object
            example:
              idWarehouse: 1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-limits/export:
    get:
      tags:
        - Reports
      summary: 'Export stock limits XLSX'
      operationId: 415f6b162a81568530c3bcdbf83b1b54
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/open-purchase-biella:
    get:
      tags:
        - Reports
      summary: 'Get report of open purchase Biella'
      operationId: 11728405a3b133c3ea6637277151c6e1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/open-purchase-biella/export:
    get:
      tags:
        - Reports
      summary: 'Export open purchase Biella XLSX'
      operationId: d43a54eae951f58f0a3a2ed5fb51406c
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/graph-stock-at-date:
    get:
      tags:
        - Reports
      summary: 'Get stock limits dates and quantities to generate graph'
      operationId: 7d43790fd8d7c9189144b6d0b5f19d38
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - dateFrom
                - dateTo
                - idItem
              properties:
                dateFrom:
                  type: string
                  format: date
                dateTo:
                  type: string
                  format: date
                idItem:
                  type: integer
              type: object
            example:
              dateFrom: '2023-01-01'
              dateTo: '2023-05-03'
              idItem: 3042
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-by-group:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value by group'
      operationId: 9186a74e3f344deec3dbacb867a6ae5a
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-by-group/export:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value by group XLSX'
      operationId: a48a5b8e1d630309d9e0fd1ecfa27ee2
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-by-item:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value by item'
      operationId: 3480a4df286c654697aa26a62e37e063
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-by-item/export:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value by item XLSX'
      operationId: 16621e4459dd0c00d3504da8d3ffe650
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-on-date:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value on specific date'
      operationId: 460dcd69e5cff483a89b0ebcdcfa2430
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-value-by-date/export:
    get:
      tags:
        - Reports
      summary: 'Get report of stock value on specific date XLSX'
      operationId: 169d85d5af5b02900dadbc2ee9bff873
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-on-date-details:
    get:
      tags:
        - Reports
      summary: 'Get stock on specific date with item details'
      operationId: ad764aed86532de61b3f1ec78007fe39
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/stock-on-date-details/export:
    get:
      tags:
        - Reports
      summary: 'Get stock on specific date with item details XLSX'
      operationId: a8d3db67423236bb4b7b0dcf414e06dd
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/inventory-lots:
    get:
      tags:
        - Reports
      summary: 'Get report of inventory lots'
      operationId: 290529426f1c34dfe768540e0f97d9a9
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idInventory
              properties:
                idInventory:
                  type: integer
              type: object
            example:
              idInventory: 8
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /reports/adjustment-inventory-lots:
    get:
      tags:
        - Reports
      summary: 'Get report of adjustments inventory lots'
      operationId: 381a16298c2d2cca47b654b237bbc5ca
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idInventory
              properties:
                idInventory:
                  type: integer
              type: object
            example:
              idInventory: 8
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /roles:
    get:
      tags:
        - Roles
      summary: 'Roles list'
      operationId: a54b004ebbd6168338f4feed2095aa40
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RoleResource' } }
                type: object
    post:
      tags:
        - Roles
      summary: 'Create new Role'
      operationId: bcb0907febbb51b1021efa8e9174ce0d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - label
                - permissions
              properties:
                name:
                  type: string
                label:
                  type: string
                permissions:
                  type: array
              type: object
            example:
              name: user
              label: Utente
              permissions: '[1]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/roles/{id}':
    get:
      tags:
        - Roles
      summary: 'Role show'
      operationId: 5b38991d928cba24ad388107e8c4a93a
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Roles
      summary: 'Edit Role'
      operationId: cf4bcd0bc1dbd5ec769b7e62a269688a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - label
                - permissions
              properties:
                name:
                  type: string
                label:
                  type: string
                permissions:
                  type: array
              type: object
            example:
              name: user
              label: Utente
              permissions: '[1]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Roles
      summary: 'Delete role'
      operationId: eb1e1d4330bed83f78bb6a7643d4cbc2
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /sales:
    get:
      tags:
        - Sales
      summary: 'Get list of quotations and sales'
      operationId: e9071d925184ec3b9522775e6810a95f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object }
                type: array
    post:
      tags:
        - Sales
      summary: 'Create new offer or order'
      operationId: 9741700fd7f92aca7b46ae0fec83a5e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - sale_type
                - sale_sequence_id
                - currency_id
                - bp_id
              properties:
                sale_type:
                  type: string
                sale_sequence_id:
                  type: string
                currency_id:
                  type: string
                bp_id:
                  type: string
              type: object
            example:
              sale_type: quotation
              sale_sequence_id: 845-10
              bp_id: 845-3107
              currency_id: EUR
              order_type_id: ''
              delivery_date: ''
              customer_order_ref: ''
              order_ref_a: ''
              order_ref_b: ''
              order_ref_c: ''
              destination_address_id: ''
              invoice_address_id: ''
              payment_term_code: ''
              payment_method_code: ''
              sales_internal_contact_id: ''
              sales_external_contact_id: ''
              carrier_id: ''
              delivery_term_id: ''
              expires_at: ''
              sale_rows:
                -
                  position: 10
                  item_id: 845-10
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: ''
                  customer_order_ref: ''
                  order_ref_a: ''
                  order_ref_b: ''
                  order_ref_c: ''
                  destination_address_id: ''
                  delivery_term_id: ''
                  carrier_id: ''
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-01-10'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
                -
                  position: 13
                  item_id: 845-22
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: ''
                  customer_order_ref: ''
                  order_ref_a: ''
                  order_ref_b: ''
                  order_ref_c: ''
                  destination_address_id: ''
                  delivery_term_id: ''
                  carrier_id: ''
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-10-25'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/sales/{id}/row':
    post:
      tags:
        - Sales
      summary: 'Create or update sale row'
      operationId: c272ca144ca04a85fc74830b947150b5
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                position:
                  type: string
                item_id:
                  type: string
                standard_product_id:
                  type: string
                configuration:
                  type: object
                quantity:
                  type: string
                order_type_id:
                  type: string
                customer_order_ref:
                  type: string
                order_ref_a:
                  type: string
                order_ref_b:
                  type: string
                order_ref_c:
                  type: string
                destination_address_id:
                  type: string
                delivery_term_id:
                  type: string
                carrier_id:
                  type: string
                tax_code:
                  type: string
                lot_id:
                  type: string
                delivery_date:
                  type: string
                sale_note:
                  type: string
                billing_note:
                  type: string
                production_note:
                  type: string
                shipping_note:
                  type: string
                packaging_note:
                  type: string
                workcenter_id:
                  type: string
              type: object
            example:
              id: null
              position: 10
              item_id: 845-10
              standard_product_id: ''
              configuration: ''
              quantity: 10
              order_type_id: ''
              customer_order_ref: ''
              order_ref_a: ''
              order_ref_b: ''
              order_ref_c: ''
              destination_address_id: ''
              delivery_term_id: ''
              carrier_id: ''
              tax_code: ''
              lot_id: ''
              delivery_date: '2023-01-10'
              sale_note: ''
              billing_note: ''
              production_note: ''
              shipping_note: ''
              packaging_note: ''
              workcenter_id: 845-1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /sales/autocomplete:
    get:
      tags:
        - Sales
      summary: 'Search items and std products for autocomplete'
      operationId: d740f4d292b56cc9a0c80fd5b4f2ad91
      parameters:
        -
          name: search
          in: query
          required: true
        -
          name: type
          in: query
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object }
                type: array
  '/sales/{id}':
    get:
      tags:
        - Sales
      summary: 'Get datails of quotation or sale'
      operationId: 4d377bdabfbfc2a1ac6f34309f497198
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Sales
      summary: 'Update offer or order'
      operationId: c1f40c960f24f9afecf4f406c4d49173
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - sale_type
                - sale_sequence_id
                - currency_id
                - bp_id
              properties:
                sale_type:
                  type: string
                sale_sequence_id:
                  type: string
                currency_id:
                  type: string
                bp_id:
                  type: string
              type: object
            example:
              sale_type: quotation
              sale_sequence_id: 845-10
              bp_id: 845-3107
              currency_id: EUR
              order_type_id: ''
              delivery_date: ''
              customer_order_ref: ''
              order_ref_a: ''
              order_ref_b: ''
              order_ref_c: ''
              destination_address_id: ''
              invoice_address_id: ''
              payment_term_code: ''
              payment_method_code: ''
              sales_internal_contact_id: ''
              sales_external_contact_id: ''
              carrier_id: ''
              delivery_term_id: ''
              expires_at: ''
              sale_rows:
                -
                  id: ''
                  position: 10
                  item_id: 845-10
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: ''
                  customer_order_ref: ''
                  order_ref_a: ''
                  order_ref_b: ''
                  order_ref_c: ''
                  destination_address_id: ''
                  delivery_term_id: ''
                  carrier_id: ''
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-01-10'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
                -
                  id: 845-50
                  position: 13
                  item_id: 845-22
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: ''
                  customer_order_ref: ''
                  order_ref_a: ''
                  order_ref_b: ''
                  order_ref_c: ''
                  destination_address_id: ''
                  delivery_term_id: ''
                  carrier_id: ''
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-10-25'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/sales/{id}/print':
    get:
      tags:
        - Sales
      summary: 'Print quotation or sale'
      operationId: 8adda4b6c00fd26efde3a571a0e853fb
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  /sales/types:
    get:
      tags:
        - Sales
      summary: 'Get list of available sale types'
      operationId: e01e57ce9185a998b55d7395faa651c5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/sales/{id}/change-state':
    post:
      tags:
        - Sales
      summary: 'Change the order status'
      operationId: 24e841c0694b92c44a83b938ee88fb40
      parameters:
        -
          name: id
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - state
              properties:
                state:
                  type: string
              type: object
            example:
              state: canceled
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/sales/row/{id}/change-state':
    post:
      tags:
        - Sales
      summary: 'Change the status of a row'
      operationId: d8585abad13a24f2542541b64feaf664
      parameters:
        -
          name: id
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - state
              properties:
                state:
                  type: string
              type: object
            example:
              state: canceled
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /sales/quotation-to-sale:
    post:
      tags:
        - Sales
      summary: 'Convert quotation into an order'
      operationId: 84dc34ad1924f45267f3bf99c52a12e0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              quotation_id: 845-10
              sale_sequence_id: 845-10
              bp_id: 845-3107
              currency_id: EUR
              order_type_id: standard
              delivery_date: '2023-12-10'
              customer_order_ref: 'customer order ref'
              order_ref_a: 'ref a'
              order_ref_b: 'ref b'
              order_ref_c: 'ref c'
              destination_address_id: 845-10
              invoice_address_id: 845-10
              payment_term_code: prepayment
              payment_method_code: bank_transfer
              sales_internal_contact_id: 845-100
              sales_external_contact_id: 845-10
              carrier_id: 845-31
              delivery_term_id: term1
              sale_rows:
                -
                  id: 845-10
                  position: 10
                  item_id: 845-10
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: standard
                  customer_order_ref: 'customer order ref'
                  order_ref_a: 'ref a'
                  order_ref_b: 'ref b'
                  order_ref_c: 'ref c'
                  destination_address_id: 845-10
                  delivery_term_id: term1
                  carrier_id: 845-30
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-01-10'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
                -
                  id: ''
                  position: 13
                  item_id: 845-22
                  standard_product_id: ''
                  configuration: ''
                  quantity: 10
                  order_type_id: standard
                  customer_order_ref: 'customer order ref'
                  order_ref_a: 'ref a'
                  order_ref_b: 'ref b'
                  order_ref_c: 'ref c'
                  destination_address_id: 845-10
                  delivery_term_id: term1
                  carrier_id: 845-30
                  tax_code: ''
                  lot_id: ''
                  delivery_date: '2023-01-10'
                  sale_note: ''
                  billing_note: ''
                  production_note: ''
                  shipping_note: ''
                  packaging_note: ''
                  workcenter_id: 845-1
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/sales/{id}/send-template':
    get:
      tags:
        - Sales
      summary: 'Get the sale email template'
      operationId: 12166ee8d3b3a904c3c6fc9e06925ccc
      parameters:
        -
          name: id
          required: true
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/sales/{id}/send':
    post:
      tags:
        - Sales
      summary: 'Send the order by email'
      operationId: 722bc7c3be31c0c7f20e1a79adcd5197
      parameters:
        -
          name: id
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - subject
                - template
                - to
              properties:
                subject:
                  type: string
                template:
                  type: string
                to:
                  type: object
              type: object
            example:
              subject: 'order #1234'
              template: '## Dear customer  \nthanks for your order'
              to:
                - info@inoma.it
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /sales/get-row-price-preview:
    post:
      tags:
        - Sales
      summary: 'Get the prices preview for a row'
      operationId: a182f2ff9d969fcfbb5b8dcc087dae6d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - sale_type
                - currency_id
                - bp_id
                - sale_row
              properties:
                sale_type:
                  type: string
                currency_id:
                  type: string
                bp_id:
                  type: string
                sale_row:
                  type: object
              type: object
            example:
              sale_type: quotation
              bp_id: 845-3107
              currency_id: EUR
              sale_row:
                item_id: 845-10
                standard_product_id: ''
                configuration: ''
                quantity: 10
                workcenter_id: 845-1
                override_total_discount: -10
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /sales/require-discount-approval:
    get:
      tags:
        - Sales
      summary: 'Get list of quotations and sales that require the total discount approval'
      operationId: c5eee17fb0ffef9ce23f6cab1dc2a0b5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object }
                type: array
  /sales/require-discount-approval-count:
    get:
      tags:
        - Sales
      summary: 'Get count of quotations and sales that require the total discount approval'
      operationId: 9219df8785dc0dba518afdd82a32444d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object }
                type: array
  '/sales/{id}/approve-discount':
    post:
      tags:
        - Sales
      summary: 'Approve or deny an override discount on a single row'
      operationId: b75d392feab4672debe10bf9da5f95d6
      parameters:
        -
          name: id
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - row_id
                - approve
              properties:
                row_id:
                  type: string
                approve:
                  type: boolean
              type: object
            example:
              row_id: 845-1
              approve: true
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /sales-discount-matrix:
    get:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Get sales discount matrix'
      operationId: 9252eb16b147457e1378757bde3856b7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixResource' } }
                type: object
    post:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Create sales discount matrix'
      operationId: 0d26099c235b5d063e3bd4a3cc1c0284
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - priority
                - description
              properties:
                priority:
                  type: integer
                description:
                  type: string
              type: object
            example:
              priority: 1
              description: 'Matrice 1'
              currency_id: EUR
              bp_id: ''
              sales_price_list_id: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixResource' } }
                type: object
  '/sales-discount-matrix/{id}':
    get:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Get details of sales discount matrix'
      operationId: 31306fb75a7a2302982586b4f6539493
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixResource' } }
                type: object
    delete:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Delete sales discount matrix'
      operationId: a0063daad3d4a8426474adee7d25a500
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixResource' } }
                type: object
  '/sales-discount-matrix/{id}/toggle':
    put:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Enable/disable sales discount matrix'
      operationId: bf493fed647ae6e0cce3f7a22f4a6058
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixResource' } }
                type: object
  '/sales-discount-matrix/{id}/rows':
    get:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Get sales discount matrix rows'
      operationId: ac19a7940c498d80a72832a5800edc6b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixRowResource' } }
                type: object
    post:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Create sales discount matrix row'
      operationId: b476944d4f15bce1b36ed4253ab1090b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - position
                - value
              properties:
                position:
                  type: integer
                value:
                  type: number
                  format: float
              type: object
            example:
              position: 1
              item_id: 845-10
              item_group_id: ''
              item_subfamily_id: ''
              quantity: 10
              value: '20'
              date_from: '2024-01-01'
              date_to: ''
              note: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixRowResource' } }
                type: object
  '/sales-discount-matrix/{id}/rows/{idRow}':
    get:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Get details of sales discount matrix row'
      operationId: c1fccabc14aa091add15e49df62d415f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixRowResource' } }
                type: object
    delete:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Delete sales discount matrix row'
      operationId: 8a19602f0533fe2550699386a9d4c816
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixRowResource' } }
                type: object
  '/sales-discount-matrix/{id}/rows/{idRow}/toggle':
    put:
      tags:
        - 'Sales Discount Matrix'
      summary: 'Enable/disable sales discount matrix row'
      operationId: f8b47b148519cd7a5de6c7357a195cb7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleDiscountMatrixRowResource' } }
                type: object
  /sales-price-lists:
    get:
      tags:
        - 'Sales Price Lists'
      summary: 'Get sales price lists'
      operationId: 67e4ef0923dd3ffca48cfc78c732d267
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
    post:
      tags:
        - 'Sales Price Lists'
      summary: 'Create sales price list'
      operationId: 7ae1be9790945c550c6d5ebb00813f77
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - currency_id
              properties:
                code:
                  type: string
                currency:
                  type: string
              type: object
            example:
              code: sales_price_list_eur
              currency_id: EUR
              bp_id: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
  '/sales-price-lists/{id}':
    get:
      tags:
        - 'Sales Price Lists'
      summary: 'Get details of sales price list'
      operationId: 708f5d6c2dac628e79a9f5001a33ad88
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
    delete:
      tags:
        - 'Sales Price Lists'
      summary: 'Delete sales price list'
      operationId: 827753cba83abd215022a700d606ac15
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
  '/sales-price-lists/{id}/toggle':
    put:
      tags:
        - 'Sales Price Lists'
      summary: 'Enable/disable sales price list'
      operationId: 4cf5735034c267bc9ff4769990be2121
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
  '/sales-price-lists/{id}/clone':
    post:
      tags:
        - 'Sales Price Lists'
      summary: 'Clone sales price list'
      operationId: 3e0f1315101aad6e544dd7c470f6217a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - currency_id
              properties:
                code:
                  type: string
                currency_id:
                  type: string
              type: object
            example:
              code: clone_test_usd
              currency_id: USD
              bp_id: ''
              price_change: -30
              rows:
                -
                  item_group_id: 845-10
                  price_change: 90
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
  '/sales-price-lists/{id}/change-prices':
    put:
      tags:
        - 'Sales Price Lists'
      summary: 'Change prices in sales price list'
      operationId: 30f47c405f78d14505114bfce45b01ae
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              price_change: -30
              rows:
                -
                  item_group_id: 845-10
                  price_change: 90
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListResource' } }
                type: object
  '/sales-price-lists/{id}/rows':
    get:
      tags:
        - 'Sales Price Lists'
      summary: 'Get sales price lists rows'
      operationId: 00d73013a9ce59c2628d35fc77dc840d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListRowResource' } }
                type: object
    post:
      tags:
        - 'Sales Price Lists'
      summary: 'Create sales price list row'
      operationId: ff3091621dd3bdcc853f28af8554a8b6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - order
                - price
              properties:
                order:
                  type: integer
                price:
                  type: number
                  format: float
              type: object
            example:
              order: 1
              item_id: 845-10
              item_group_id: ''
              item_subfamily_id: ''
              quantity: 10
              width: ''
              class: ''
              date_from: '2024-01-01'
              date_to: ''
              price: 15
              note: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListRowResource' } }
                type: object
  '/sales-price-lists/{id}/rows/{idRow}':
    get:
      tags:
        - 'Sales Price Lists'
      summary: 'Get details of sales price lists row'
      operationId: 78de267ad93dd302fd1f6098343ce78c
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListRowResource' } }
                type: object
    delete:
      tags:
        - 'Sales Price Lists'
      summary: 'Delete sales price lists row'
      operationId: 522ae52a1dba1c78a19c8680a75e539f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListRowResource' } }
                type: object
  '/sales-price-lists/{id}/rows/{idRow}/toggle':
    put:
      tags:
        - 'Sales Price Lists'
      summary: 'Enable/disable sales price list row'
      operationId: 96a5f170610090d81a300dd709258b03
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SalePriceListRowResource' } }
                type: object
  /sale-sequences:
    get:
      tags:
        - 'Sale Sequences'
      summary: 'Get list of sale sequences'
      operationId: 60c12deb67682f4c56bbc22036b188bf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleSequenceResource' } }
                type: object
    post:
      tags:
        - 'Sale Sequences'
      summary: 'Create new sale sequence'
      operationId: 805e2a924713b640bc1f39695c8eaadd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - prefix
              properties:
                name:
                  type: string
                prefix:
                  type: string
                quotation_default:
                  type: boolean
                sale_default:
                  type: boolean
              type: object
            example:
              name: 'Ordini di vendita'
              prefix: ORDV
              quotation_default: 1
              sale_default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleSequenceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/sale-sequences/{id}':
    get:
      tags:
        - 'Sale Sequences'
      summary: 'Get details of a sale sequence'
      operationId: 1d4fcef7076d563666760824722de25c
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleSequenceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    put:
      tags:
        - 'Sale Sequences'
      summary: 'Update a sale sequence'
      operationId: c4e2aa4369751aba04ee4302a3afaf7f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                prefix:
                  type: string
                quotation_default:
                  type: boolean
                sale_default:
                  type: boolean
              type: object
            example:
              name: 'Ordini di vendita'
              quotation_default: 1
              sale_default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleSequenceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Sale Sequences'
      summary: 'Delete a sale sequence'
      operationId: dfc16b840e4f98a3328bb25dda9ba6a2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleSequenceResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /sales-total-discount-matrix:
    get:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Get sales total discount matrix'
      operationId: 4300a26d15ba15f2693ee95bd3785050
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixResource' } }
                type: object
    post:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Create sales total discount matrix'
      operationId: 2c21c33586b76a7d17518a7e91bef174
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - priority
                - description
              properties:
                priority:
                  type: integer
                description:
                  type: string
              type: object
            example:
              priority: 1
              description: 'Matrice 1'
              currency_id: EUR
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixResource' } }
                type: object
  '/sales-total-discount-matrix/{id}':
    get:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Get details of sales total discount matrix'
      operationId: bcb50b9e6578ebd3ab974f4613b73b2a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixResource' } }
                type: object
    delete:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Delete sales total discount matrix'
      operationId: 6d22242d1341956fdfd2941c0a65bb4a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixResource' } }
                type: object
  '/sales-total-discount-matrix/{id}/toggle':
    put:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Enable/disable sales total discount matrix'
      operationId: 0eb72b48f1d761b3cd30d8e73fd69757
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixResource' } }
                type: object
  '/sales-total-discount-matrix/{id}/rows':
    get:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Get sales total discount matrix rows'
      operationId: b79af8522444bd120dc7d12f1c5ae1e9
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixRowResource' } }
                type: object
    post:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Create sales total discount matrix row'
      operationId: 99e0219b5249a6b8e1484c80780f90ce
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - position
                - value
                - service_item_id
              properties:
                position:
                  type: integer
                value:
                  type: number
                  format: float
                service_item_id:
                  type: string
              type: object
            example:
              position: 1
              item_id: 845-10
              item_group_id: ''
              item_subfamily_id: ''
              service_item_id: 845-1026
              quantity: 10
              width: ''
              value: '20'
              bp_id: ''
              bp_group_id: ''
              note: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixRowResource' } }
                type: object
  '/sales-total-discount-matrix/{id}/rows/{idRow}':
    get:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Get details of sales total discount matrix row'
      operationId: 4199fed2b062ecfe7f6998da9e99b12e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixRowResource' } }
                type: object
    delete:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Delete sales total discount matrix row'
      operationId: 3dd1a25e8f5bd7a186b55327d6a6ccef
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixRowResource' } }
                type: object
  '/sales-total-discount-matrix/{id}/rows/{idRow}/toggle':
    put:
      tags:
        - 'Sales Total Discount Matrix'
      summary: 'Enable/disable sales total discount matrix row'
      operationId: 8b66df56719e6ffc970092723038fe97
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - disable
              properties:
                disable:
                  type: boolean
              type: object
            example:
              disable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/SaleTotalDiscountMatrixRowResource' } }
                type: object
  /standard-products/:
    get:
      tags:
        - 'Standard Products'
      summary: 'Get available Standard Products'
      operationId: e1fc626de0c338986479a4f06c0873f7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/StandardProductTypeResource' } }
                type: object
  /standard-products:
    post:
      tags:
        - 'Standard Products'
      summary: 'Create new Standard Products'
      operationId: d4365c2cbc8461f067e22df99e0a03a3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
                - name
                - item_group_id
                - um_id
              properties:
                code:
                  type: string
                name:
                  type: string
                company_id:
                  type: integer
                item_group_id:
                  type: string
                um_id:
                  type: string
                description_constraint_id:
                  type: string
                long_description_constraint_id:
                  type: string
                production_description_constraint_id:
                  type: string
              type: object
            example:
              code: belt
              name: 'Simple Belt'
              company_id: 845
              item_group_id: 0-16
              um_id: 'N'
              description_constraint_id: 845-1
              long_description_constraint_id: 845-2
              production_description_constraint_id: 845-4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardProductResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}':
    get:
      tags:
        - 'Standard Products'
      summary: 'Standard Products show'
      operationId: 202c10fce4774aad479baa13158f7e20
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardProductResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - 'Standard Products'
      summary: 'Update Standard Products'
      operationId: 48af5b37b7bb0949d6a123a234dd1d01
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                company_id:
                  type: integer
                item_group_id:
                  type: string
                um_id:
                  type: string
                description_constraint_id:
                  type: string
                long_description_constraint_id:
                  type: string
                production_description_constraint_id:
                  type: string
              type: object
            example:
              name: 'Simple Belt'
              company_id: 845
              item_group_id: 0-13
              um_id: 'N'
              description_constraint_id: 845-1
              long_description_constraint_id: 845-2
              production_description_constraint_id: 845-4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardProductResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Standard Products'
      summary: 'Delete Standard Products'
      operationId: 4a373c7bcf7b1daf7b511f1450fd2f70
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardProduct'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/clone':
    post:
      tags:
        - 'Standard Products'
      summary: 'Clone Standard Products'
      operationId: 043d6d343384b9b3bfd9af4690fe2e4a
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - code
              properties:
                code:
                  type: string
              type: object
            example:
              code: cloned_belt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardProductResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/configure':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add Feature to Standard Product'
      operationId: bb26f46efa13c6c76aa174aef5747dff
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - feature_id
                - position
              properties:
                feature_id:
                  type: string
                readonly:
                  type: boolean
                position:
                  type: integer
                hidden:
                  type: boolean
                multiple:
                  type: boolean
                validation_constraint_id:
                  type: string
                value_constraint_id:
                  type: string
                dataset_constraint_id:
                  type: string
                activation_constraint_id:
                  type: string
                feature_attribute_id:
                  type: string
              type: object
            example:
              feature_id: width
              readonly: false
              position: 1
              hidden: false
              multiple: false
              validation_constraint_id: v-1
              value_constraint_id: v-2
              dataset_constraint_id: v-3
              activation_constraint_id: null
              feature_attribute_id: main_product
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/configure/{idFeature}':
    put:
      tags:
        - 'Standard Products'
      summary: 'Edit Feature associated to Standard Product'
      operationId: 599b0f763a18f2d4b3a5f30c0392cdba
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idFeature'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                feature_id:
                  type: string
                readonly:
                  type: boolean
                position:
                  type: integer
                hidden:
                  type: boolean
                multiple:
                  type: boolean
                validation_constraint_id:
                  type: string
                value_constraint_id:
                  type: string
                dataset_constraint_id:
                  type: string
                activation_constraint_id:
                  type: string
                feature_attribute_id:
                  type: string
              type: object
            example:
              feature_id: width
              readonly: false
              position: 1
              hidden: false
              multiple: true
              validation_constraint_id: v-1
              value_constraint_id: v-2
              dataset_constraint_id: v-3
              activation_constraint_id: null
              feature_attribute_id: main_product
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Standard Products'
      summary: 'Delete a feature associated to a Standard Products'
      operationId: 9875284e5f5a2e959d2b6517ed25c504
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idFeature'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/configure/bulk-features':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add bulk Features to Standard Product'
      operationId: bb6c57da956edb662138c88340ae89eb
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - productConfigurationFeature
              type: object
            example:
              productConfigurationFeature:
                feature_id: width
                readonly: false
                position: 1
                hidden: false
                multiple: false
                validation_constraint_id: null
                value_constraint_id: null
                dataset_constraint_id: null
                activation_constraint_id: enable_width
                feature_attribute_id: LU
              '0':
                feature_id: length
                readonly: false
                position: 1
                hidden: false
                multiple: false
                validation_constraint_id: null
                value_constraint_id: null
                dataset_constraint_id: null
                activation_constraint_id: enable_width
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/bom-rule':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add BOM Rule to Standard Product'
      operationId: 8039a623d773aa0eab823b0cb4355dab
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - constraint_id
                - position
              properties:
                constraint_id:
                  type: string
                position:
                  type: integer
              type: object
            example:
              constraint_id: bom_c_001
              position: 1
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/bom-rule/{idRule}':
    put:
      tags:
        - 'Standard Products'
      summary: 'Edit BOM rule associated to Standard Product'
      operationId: 9b1bbe624dcc341acaa3478bcaaaed80
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idRule'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                constraint_id:
                  type: string
                position:
                  type: integer
              type: object
            example:
              constraint_id: bom_c_001
              position: 1
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Standard Products'
      summary: 'Delete a BOM rule associated to a Standard Products'
      operationId: 1f54a00859f166864316ec42d3025bdc
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idRule'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/bom-rule/bulk-bom-rules':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add bulk BOM Rules to Standard Product'
      operationId: fcccd2e67d8c42d69b574536a7cf24c5
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - BOMRules
              type: object
            example:
              BOMRules:
                constraint_id: bom_c_001
                position: 1
              '0':
                constraint_id: bom_c_002
                position: 2
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/routing':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add Routing row to Standard Product'
      operationId: 4fd3cfd6c9930263b38f70cfa07eece7
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - process_id
                - activation_constraint_id
                - workload_constraint_id
                - position
              properties:
                process_id:
                  type: string
                activation_constraint_id:
                  type: string
                workload_constraint_id:
                  type: string
                position:
                  type: integer
              type: object
            example:
              process_id: lavorazione
              activation_constraint_id: routing_c_001
              workload_constraint_id: routing_c_002
              position: 1
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/routing/{routing}':
    put:
      tags:
        - 'Standard Products'
      summary: 'Edit Routing row associated to Standard Product'
      operationId: 5c459c9ffa00c8613f0c7bcdc6d2caf5
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idRule'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                process_id:
                  type: string
                activation_constraint_id:
                  type: string
                workload_constraint_id:
                  type: string
                position:
                  type: integer
              type: object
            example:
              process_id: lavorazione
              activation_constraint_id: routing_c_001
              workload_constraint_id: routing_c_002
              position: 1
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Standard Products'
      summary: 'Delete a Routing row associated to a Standard Products'
      operationId: 13fb8b42ba6d0dac51aa3dfd2e0a8207
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/idRule'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/routing/bulk-routing':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add bulk routing rows to Standard Product'
      operationId: 32460ecbcfd41a05954e38367a4ca83e
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - routings
              type: object
            example:
              routings:
                -
                  process_id: lavorazione
                  activation_constraint_id: routing_c_001
                  workload_constraint_id: routing_c_002
                  position: 1
                -
                  process_id: 'lavorazione 2'
                  activation_constraint_id: routing_c_001
                  workload_constraint_id: routing_c_002
                  position: 2
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/standard-products/{id}/sale-pricing/bulk-pricing':
    post:
      tags:
        - 'Standard Products'
      summary: 'Add bulk sale pricing rules to Standard Product'
      operationId: 18c527e4eee68d63f32a1d00a57d5171
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - pricing
              type: object
            example:
              sale_pricing:
                -
                  name: Materials
                  position: 1
                  constraints: [{ position: 1, constraint_id: c1 }, { position: 2, constraint_id: c2 }]
                -
                  name: Accessories
                  position: 2
                  constraints: [{ position: 1, constraint_id: c3 }, { position: 2, constraint_id: c4 }]
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /stocks:
    get:
      tags:
        - Stock
      summary: 'Stocks list'
      operationId: baa79954a3882c15341f4d23df49a5f2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/StockResource' } }
                type: object
  '/stocks/inventory-lots/{id_lot}':
    put:
      tags:
        - Stock
      summary: 'Update lot inventory in stocks'
      operationId: af108a9bbe8a3a256d1fb2cef4bc168d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id_warehouse
                - id_warehouse_location
              properties:
                id_warehouse:
                  type: integer
                id_warehouse_location:
                  type: integer
              type: object
            example:
              id_warehouse: 17
              id_warehouse_location: 435
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Stock
      summary: 'Delete lot inventory in stocks'
      operationId: 1dfb53a2b951f18115f7a3a5a3ba02bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id_warehouse
                - id_warehouse_location
              properties:
                id_warehouse:
                  type: integer
                id_warehouse_location:
                  type: integer
              type: object
            example:
              id_warehouse: 17
              id_warehouse_location: 435
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /stocks/report-export-all:
    get:
      tags:
        - Stock
        - report_service_export_stock_all.php
      summary: 'Export complete stock situation'
      operationId: 5677b65fe182b0d98a6f55b437d511f4
      responses:
        '200':
          description: OK
          content:
            text/csv: {  }
  /stocks/export:
    get:
      tags:
        - Stock
      summary: 'Export Stocks list XLSX'
      operationId: 78070f9bb76729dd6cbf29392ed4cdf0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/StockResource' } }
                type: object
  '/stocks/{id}/lot-dimensions':
    get:
      tags:
        - Stocks
      summary: 'Get lot dimensions by stock'
      operationId: 44dc826d1741a46f962d85b081e70f9c
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
  '/stocks/{id}/erase-and-add-new-lot':
    put:
      tags:
        - Stock
        - adjustments_lot.php
      summary: 'Erase stock and add new lot'
      operationId: 5ae743c276e2514e925f7f9d59a05fd1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idAdjustmentType
                - qty
                - de
                - di
                - la
                - lu
                - pz
              properties:
                idAdjustmentType:
                  type: integer
                qty:
                  type: float|null
                de:
                  type: float|null
                di:
                  type: float|null
                la:
                  type: float|null
                lu:
                  type: float|null
                pz:
                  type: float|null
              type: object
            example:
              idAdjustmentType: 3
              qty: 30
              de: 0
              di: 0
              la: 10.23
              lu: 2.34
              pz: 2
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  '/stocks/{id}/erase-lot':
    delete:
      tags:
        - Stock
        - adjustments_lot.php
      summary: 'Erase stock lot'
      operationId: 4c667dce091771a0dcb52af0ae43fa95
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idAdjustmentType
              properties:
                idAdjustmentType:
                  type: integer
              type: object
            example:
              idAdjustmentType: 3
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /timezones:
    get:
      tags:
        - Timezone
      summary: 'Get list of timezones'
      operationId: c4919254ea79c39ba274b413632c2da7
      responses:
        '200':
          description: OK
  /transactions/last-by-supplier-and-item:
    get:
      tags:
        - Transactions
      summary: 'Get last transactions by supplier and item'
      operationId: cd55b7270173b61c1b41bd5f6ff28f08
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - idItem
                - idBP
              properties:
                idItem:
                  type: integer
                idBP:
                  type: integer
              type: object
            example:
              idItem: 3539
              idBP: 6817
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /transactions/last-by-user:
    get:
      tags:
        - Transactions
      summary: 'Get last transactions by user'
      operationId: 3f73e61c437ecae3c89ae4efbefd6b16
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /transactions/types:
    get:
      tags:
        - Transactions
      summary: 'Get available transaction types'
      operationId: dd6784a7cebb82baa0f3df39334b390a
      responses:
        '200':
          description: OK
        '500':
          description: 'Internal Error'
  /um:
    get:
      tags:
        - Um
        - masterdata_item_add.php
      summary: 'Um list'
      operationId: e2f133568bc59d85378d4dcb84acf977
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/UmResource' } }
                type: array
  '/um/{id}':
    get:
      tags:
        - Um
        - masterdata_item_add.php
      summary: 'Show um'
      operationId: aa7794c7bdc0980e1b9dbc657743dbeb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmResource'
  '/um/{idDim}/dimensions':
    get:
      tags:
        - 'Um dimensions'
      summary: 'Um dimensions list'
      operationId: 4ff5bb160827abe640dfe074e28b5fb1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/UmResource' } }
                type: array
  /login:
    post:
      tags:
        - Users
        - index.php
      summary: Login
      operationId: 802efa828bed5cff912616a7ff48e617
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
              type: object
            example:
              username: nome.utente
              password: password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /logout:
    post:
      tags:
        - Users
        - logout.php
      summary: Logout
      operationId: 716ee9fdd4df72c5cb7cd983a3a5c2ef
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
  /user:
    get:
      tags:
        - Users
        - index.php
      summary: 'Get current user'
      operationId: 36bba6d20fa5d24d908836e1adfb3c3b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Unauthorized
  /users:
    get:
      tags:
        - User
      summary: 'Users list'
      operationId: 7208c29037df2b8bb02499ba39ed8a78
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/UserResource' } }
                type: object
    post:
      tags:
        - Users
      summary: 'Create new user'
      operationId: 262eb5ca1fdea354023c0a8870442c1e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - IDcompany
                - username
                - language
                - IDwarehouseUserDef
                - clientTimezoneDB
                - decimal_symb
                - list_separator
                - roles
              properties:
                IDcompany:
                  type: string
                username:
                  type: string
                language:
                  type: string
                IDwarehouseUserDef:
                  type: string
                clientTimezoneDB:
                  type: string
                decimal_symb:
                  type: string
                list_separator:
                  type: string
                roles:
                  type: array
                employee_contact_id:
                  type: string
              type: object
            example:
              IDcompany: 845
              username: utente
              language: it
              IDwarehouseUserDef: 0
              clientTimezoneDB: Europe/Rome
              decimal_symb: ','
              list_separator: ;
              roles: '[1]'
              employee_contact_id: 845-15
              default_workcenter: 845-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/users/{id}':
    get:
      tags:
        - Users
      summary: 'User show'
      operationId: 6946bbab7898f59a09e3c8e529a38907
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Users
      summary: 'Update user'
      operationId: 05028d02ea3e9a99abd6260cfe05b179
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - IDcompany
                - username
                - language
                - IDwarehouseUserDef
                - clientTimezoneDB
                - decimal_symb
                - list_separator
                - roles
              properties:
                IDcompany:
                  type: string
                username:
                  type: string
                language:
                  type: string
                IDwarehouseUserDef:
                  type: string
                clientTimezoneDB:
                  type: string
                decimal_symb:
                  type: string
                list_separator:
                  type: string
                roles:
                  type: array
                employee_contact_id:
                  type: string
              type: object
            example:
              IDcompany: 845
              username: utente
              language: it
              IDwarehouseUserDef: 0
              clientTimezoneDB: Europe/Rome
              decimal_symb: ','
              list_separator: ;
              roles: '[1]'
              employee_contact_id: 845-15
              default_workcenter: 845-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Users
      summary: 'Delete user'
      operationId: b3d28da5dc9de7fc1bd425f93b54ff7b
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /user/timezone:
    put:
      tags:
        - User
      summary: 'Update user timezone'
      operationId: c42b0b1c423fc8776b710dfae1d51416
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - timezone
              properties:
                timezone:
                  type: string
              type: object
            example:
              timezone: Europe/Rome
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /user/regional:
    put:
      tags:
        - User
      summary: 'Update user regional'
      operationId: 428ad49c3d0bbd5b23b5f66524bf2dea
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - decimalSymb
                - listSeparator
              properties:
                decimalSymb:
                  type: string
                listSeparator:
                  type: string
              type: object
            example:
              decimalSymb: ','
              listSeparator: ;
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /wac/available-years:
    get:
      tags:
        - WAC
        - wac_year_layer_manager.php
      summary: 'Get available years for creating a wac layer'
      operationId: ee37b21511d07c1f2a88d60412ac9ae0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  /wac/layers:
    get:
      tags:
        - WAC
        - wac_year_layer_manager.php
      summary: 'Get all wac layers'
      operationId: cbd3056b77db866eb01e84adf5c601f0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  /wac:
    post:
      tags:
        - WAC
        - wac_year_layer_manager.php
      summary: 'Create new or recreate wac layer'
      operationId: 1d0be5d6e46e23d72d0803c213a99f03
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - year
              properties:
                year:
                  type: number
              type: object
            example:
              year: 2023
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WACYearLayerResource'
        '400':
          description: 'Not Valid Year'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/wac/{id}/set-definitive':
    put:
      tags:
        - WAC
        - wac_year_layer_manager.php
      summary: 'Set a layer definitive'
      operationId: e13ec8f72965a933b0a6edbc1b4f1c77
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - IDlayer
              properties:
                IDlayer:
                  type: number
              type: object
            example:
              IDlayer: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WACYearLayerResource'
        '400':
          description: "Layer can't be definitive"
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/wac/layers/{year}/report':
    get:
      tags:
        - WAC
        - wac_year_layer_report.php
      summary: 'Get the wac layer year report with the associated errors'
      operationId: ca11181ded21d967c7b4d1baa53cc5e8
      parameters:
        -
          $ref: '#/components/parameters/year'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  '/wac/layers/{year}/report/export':
    get:
      tags:
        - WAC
        - wac_year_layer_report.php
      summary: 'Get the wac layer year report in XLSX'
      operationId: 3d821f40600e8348df525b25256f6eea
      parameters:
        -
          $ref: '#/components/parameters/year'
      responses:
        '200':
          description: OK
  /wac/calc-simulation:
    get:
      tags:
        - WAC
        - wac_calc_simulation.php
      summary: 'Get the wac simulation data by item and date'
      operationId: 4322464c7a9ac9047d052854afc1852d
      parameters:
        -
          name: date
          in: query
        -
          name: item
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  /wac/calc-simulation/export:
    get:
      tags:
        - WAC
        - wac_calc_simulation.php
      summary: 'Get the wac simulation data by item and date in XLSX'
      operationId: 6c0eb71e28aa810e89efdfbacae7bfbb
      parameters:
        -
          name: date
          in: query
        -
          name: item
          in: query
      responses:
        '200':
          description: OK
  /wac/calc-year-to-date:
    get:
      tags:
        - WAC
        - wac_calc_year_to_date_report.php
      summary: 'Get the wac report from start of the year to date'
      operationId: 84c4fbdb68d0b7a6a81e09b0de8bb577
      parameters:
        -
          name: date
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  /wac/calc-year-to-date/export:
    get:
      tags:
        - WAC
        - wac_calc_year_to_date_report.php
      summary: 'Get the wac report from start of the year to date in XLSX'
      operationId: eb83a7f9b0b6744de7f12da20bb71357
      parameters:
        -
          name: date
          in: query
      responses:
        '200':
          description: OK
  /wac/calc-year-to-date-lots-details:
    get:
      tags:
        - WAC
        - wac_calc_year_to_date_report_lots_details.php
      summary: 'Get the wac report from start of the year to date with lot details'
      operationId: 5a2d68faeffb4eff42c7bb3006d0a286
      parameters:
        -
          name: date
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
  /wac/calc-year-to-date-lots-details/export:
    get:
      tags:
        - WAC
        - wac_calc_year_to_date_report_lots_details.php
      summary: 'Get the wac report from start of the year to date  with lot details in XLSX'
      operationId: ea2ed92593013dfd0c0590602463e293
      parameters:
        -
          name: date
          in: query
      responses:
        '200':
          description: OK
  /warehouses:
    get:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Warehousec list'
      operationId: 3372805147f864b12074140bdb10822c
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/WarehouseLocationResource' } }
                type: array
    post:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Create new Warehouse'
      operationId: 16addbb3cc60661320c929bebae025c7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
                - IDcountry
              properties:
                desc:
                  type: string
                IDcountry:
                  type: string
              type: object
            example:
              desc: 'Nome Warehouse'
              IDcountry: IT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/warehouses/{id}':
    get:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Warehouse show'
      operationId: 62a54b2de4169e3d96ea49e5c2d90810
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Update Warehouse'
      operationId: 938ea3ce2ded7ebc901b5607a0f66bf8
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: []
              properties:
                desc:
                  type: string
              type: object
            example:
              desc: 'Nome BP'
              supplier: 1
              customer: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BPResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Delete Warehouse'
      operationId: e73eba72d71d81e9fd075f962abef24e
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /countries:
    get:
      tags:
        - Countries
        - masterdata_warehouse_location.php
      summary: 'Countries list'
      operationId: 9b0efacf7ee552c61eeb4375afc83d22
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/CountryResource' } }
                type: array
  /warehouses/locations:
    get:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Warehouse locations list'
      operationId: fa4891e720755c63ba87a20659f810b6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/WarehouseLocationResource' } }
                type: array
  /warehouses/locations/types:
    get:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Get warehouse location types list'
      operationId: 32e4d43d67fcd958084ce50468694670
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  '': { type: object, items: { $ref: '#/components/schemas/WarehouseLocationTypeResource' } }
                type: array
  '/warehouses/{id}/locations':
    post:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Create new Warehouse Location'
      operationId: 5f1060e929e8d19c93157e9d68864143
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - desc
                - IDwarehouse
              properties:
                desc:
                  type: string
                note:
                  type: string
                IDwarehouse:
                  type: integer
                IDwh_loc_Type:
                  type: integer
              type: object
            example:
              desc: 'Nome destinazione'
              note: note
              IDwarehouse: 1
              IDwh_loc_Type: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseLocationResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  '/warehouses/{id}/locations/{location_id}':
    get:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Warehouse Location show'
      operationId: 0f3d6a236c7b9434c7f1c96056885b6a
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/location_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseLocationResource'
        '404':
          description: 'Not Found'
        '403':
          description: Unauthorized
    put:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Update Warehouse Location'
      operationId: a46c895f8298370c62a88fb665652105
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/location_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                desc:
                  type: string
              type: object
            example:
              desc: 'Nome destinazione'
              note: note
              IDwh_loc_Type: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseLocationResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - Warehouse
        - masterdata_warehouse_location.php
      summary: 'Delete BP destination'
      operationId: b3efd23d788da13aa24197686cc3fe9f
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          $ref: '#/components/parameters/location_id'
      responses:
        '200':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Error'
  /weights:
    get:
      tags:
        - 'Weights UM'
      summary: 'Get list of weights'
      operationId: 437a22eca2252d8bf2030e6ffc760db4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WeightResource' } }
                type: object
  '/weights/{id}':
    get:
      tags:
        - 'Weights UM'
      summary: 'Get details of single weight'
      operationId: 9f5406583b0577ef72092ac6b5174eef
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WeightResource' } }
                type: object
  /workcenters:
    get:
      tags:
        - Workcenters
      summary: 'Get list of workcenters'
      operationId: 10f3db927f55a59c5e2727e6470635bb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
    post:
      tags:
        - Workcenters
      summary: 'Create new workcenter'
      operationId: 9ee2899f8f7d96e31f4a7f19ce49402c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
              type: object
            example:
              name: 'Workcenter 1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
  '/workcenters/{id}':
    get:
      tags:
        - Workcenters
      summary: 'Get details of workcenter'
      operationId: 6966e7540984117fbe2a99cb93c9ee8d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
    put:
      tags:
        - Workcenters
      summary: 'Update workcenter'
      operationId: 174fc3e188c6955a2bb9f05ed9f02087
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  type: string
              type: object
            example:
              name: 'Workcenter 12'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
    delete:
      tags:
        - Workcenters
      summary: 'Delete workcenter'
      operationId: 56a7789df82e78fd8a880a651786ec45
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkcenterResource' } }
                type: object
  /working-days-rules:
    get:
      tags:
        - 'Working Days Rule'
      summary: 'Get list of working days rules'
      operationId: 07a5cb417e97fb2d4c849c711aa276e6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/WorkingDaysRuleResource' } }
                type: object
    post:
      tags:
        - 'Working Days Rule'
      summary: 'Create new working days rule'
      operationId: f1347679f15393a2d8123c7d998b7260
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - type
                - start
                - repeat
              properties:
                type:
                  type: boolean
                start:
                  type: string
                end:
                  type: string
                days_of_week:
                  type: object
                repeat:
                  type: boolean
              type: object
            example:
              type: 1
              start: '2023-12-24'
              end: '2023-12-26'
              days_of_week:
                - 1
                - 2
              repeat: 1
              note: Christmas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingDaysRuleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /working-days-rules/check:
    get:
      tags:
        - 'Working Days Rule'
      summary: 'Get all open / close days in a period'
      operationId: 24a7660a894dc7a3872ad8552d85d59c
      parameters:
        -
          name: start
          in: query
          required: 'true'
        -
          name: end
          in: query
          required: 'true'
        -
          name: type
          in: query
          description: '0 for close, 1 for open days'
          required: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data: { type: array }
                type: object
  '/working-days-rules/{id}':
    get:
      tags:
        - 'Working Days Rule'
      summary: 'Get details of a sale sequence'
      operationId: c69c542bbf0bad07d8e34ae62c1b54fc
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingDaysRuleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    put:
      tags:
        - 'Working Days Rule'
      summary: 'Update a sale sequence'
      operationId: e26c41dedf281daa5aa62458b1662b09
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: boolean
                start:
                  type: string
                end:
                  type: string
                days_of_week:
                  type: object
                repeat:
                  type: boolean
              type: object
            example:
              type: 1
              start: '2023-12-24'
              end: '2023-12-26'
              days_of_week:
                - 1
                - 2
              repeat: 1
              note: Christmas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingDaysRuleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
    delete:
      tags:
        - 'Working Days Rule'
      summary: 'Delete a sale sequence'
      operationId: 4016f89f92d692436718dbc5f6207ddb
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingDaysRuleResource'
        '403':
          description: Unauthorized
        '500':
          description: 'Internal Error'
  /csrf-cookie:
    get:
      tags:
        - Users
      summary: 'Get CSRF Token. Set the token in X-XSRF-TOKEN header'
      operationId: 2858e20d501d6c6384a15e39d85d1243
      responses:
        '200':
          description: 'OK. The token is set in the XSRF-TOKEN cookie'
